@model GreenBushIEP.Models.tblIEPCommunication

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal"><span class="glyphicon glyphicon-remove-circle" style="font-size: 30px;"></span></button>
    <button type="button" class="print-module" id="printModuleBtn" onclick="printModule('Comm');"><span class="glyphicon glyphicon-print" style="font-size: 27px;padding-right:8px" title="Print Module"></span></button>    
	<button type="button" class="tooltip-help" data-toggle="tooltip" data-placement="bottom" title="Follow the tooltips to learn how to user this form"><span class="glyphicon glyphicon-question-sign" style="font-size: 30px;"></span></button>
    <h4 class="modal-title pull-left" id="myModalLabel" style="font-size: 30px;"><i class="far fa-comment-dots" aria-hidden="true" style="font-size: smaller; "></i>&nbsp;Communication</h4>
    <div class="module-user-name">@(ViewBag.studentName)</div>
</div>
<div class="modal-body">

    @using (Html.BeginForm("EditCommunication", "ModuleSection", FormMethod.Post, new { }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IEPCommunicationID)
        @Html.HiddenFor(model => model.Completed)

        <div class="funkyradio">
            <div class="funkyradio-success">
                <input type="checkbox" id="ModuleCommunicationNoConcerns" name="ModuleCommunicationNoConcerns" @(Model.NoConcerns ? "checked" : String.Empty ) />
                <label for="ModuleCommunicationNoConcerns" class="standard-font-size">No Concerns</label>
            </div>
            <div class="funkyradio-primary">
                <input type="checkbox" name="ModuleCommunicationProgressTowardGenEd" id="ModuleCommunicationProgressTowardGenEd" @(Model.ProgressTowardGenEd ? "checked" : String.Empty) />
                <label for="ModuleCommunicationProgressTowardGenEd" class="standard-font-size">Progressing with General Education Support</label>
            </div>
            <div class="funkyradio-primary">
                <input type="checkbox" name="ModuleCommunicationAreaOfNeed" id="ModuleCommunicationAreaOfNeed" @(Model.AreaOfNeed == true ? "checked" : String.Empty) />
                <label for="ModuleCommunicationAreaOfNeed" class="standard-font-size">Area of Need which impacts performance in General Education</label>
            </div>
            <div class="funkyradio-primary">
                <input type="checkbox" name="ModuleCommunicationDeaf" id="ModuleCommunicationDeaf" @(Model.Deaf ? "checked" : String.Empty) />
                <label for="ModuleCommunicationDeaf" class="standard-font-size">Deaf/Hard of Hearing</label>
            </div>
            <div class="funkyradio-primary">
                <input type="checkbox" name="ModuleCommunicationLimitedEnglish" id="ModuleCommunicationLimitedEnglish" @(Model.LimitedEnglish ? "checked" : String.Empty) />
                <label for="ModuleCommunicationLimitedEnglish" class="standard-font-size">Limited English Proficiency</label>
            </div>
        </div>
        <fieldset class="form-group">
            <div>
                <label class="standard-font-size" style="padding: 25px 0 15px;">Present Levels of Academic Achievement and Functional Performance (PLAAFP)</label>
            </div>
            <label style="font-size: 18px; font-weight:400; padding: 0 0 1px;">Strengths</label>
            <div class="form-check">
                <textarea class="form-control standard-font-size" id="PLAAFP_Strengths" name="PLAAFP_Strengths" rows="3" placeholder="Describe Strengths">@(Model.PLAAFP_Strengths)</textarea>
            </div>
            <label style="font-size: 18px; font-weight:400; padding: 10px 0 1px;">Concerns (including Baseline) </label>
            <div class="form-check">
                <textarea class="form-control standard-font-size" id="PLAAFP_Concerns" name="PLAAFP_Concerns" rows="3" placeholder="Describe Concerns (including Baseline)">@(Model.PLAAFP_Concerns)</textarea>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <label class="standard-font-size" style="padding: 25px 0 15px;">Area of Need which Impacts Performance</label>
            <div class="form-check">
                <textarea class="form-control standard-font-size" name="ModuleCommunicationAreaOfNeedDescription" id="ModuleCommunicationAreaOfNeedDescription" rows="3">@(Model.AreaOfNeedDescription)</textarea>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <div class="form-check">
                <label class="standard-font-size" style="padding: 25px 0 15px;">Addtional Notes</label>
                <textarea class="form-control standard-font-size" id="CommunitcationNotes" name="CommunitcationNotes" type="text" rows="3">@(Model.Notes)</textarea>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <label class="standard-font-size" style="padding: 25px 0 15px; padding-bottom: 0; margin-bottom: 0;">This need will be met by</label>
            <div class="form-check">
                <div class="checkbox needsCheckbox">
                    <label class="standard-font-size"><input type="checkbox" name="MetByGoal" @(Model.NeedMetByGoal == true ? "checked" : String.Empty)><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>Goal</label><br />
                    <label class="standard-font-size"><input type="checkbox" name="MetByAccommodation" @(Model.NeedMetByAccommodation == true ? "checked" : String.Empty)><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>Accommodation(s), Modification(s), and/or Supplemental Aid</label><br />
                    <label class="standard-font-size"><input type="checkbox" name="MetByOther" @(Model.NeedMetByOther == true ? "checked" : String.Empty)><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>Other</label><br />
                </div>
            </div>
            <div class="form-check" id="MeetByOtherTextArea">
                <br />
                <p class="standard-font-size" style="display: @(Model.NeedMetByOther == true ? "block;" : "none;")">
                    *if other, please explain<br />
                    <textarea class="form-control standard-font-size" id="MeetNeedByOtherDescription" name="MeetNeedByOtherDescription" type="text" rows="3" maxlength="2000" data-toggle="tooltip" data-placement="bottom" title="2000 character limit.">@(Model.NeedMetByOtherDescription)</textarea>
                </p>
            </div>
        </fieldset>
        <div class="row">
            <div class="col-md-12" style="text-align:center;">
                <div class="form-group">
                    <button type="submit" class="formbtn btn btn-primary btn-lg"><i class="glyphicon glyphicon-floppy-disk"></i>&nbsp;Save Draft</button>
                    <button type="button" class="formbtn btn btn-success btn-lg" id="saveCommunicationCompleted"><i class="glyphicon glyphicon-check"></i>&nbsp;Save &amp; Complete</button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @if (!String.IsNullOrEmpty(ViewBag.modifiedByFullName))
                {
                    <h6 class="pull-right modified">last updated on @(Model.Update_Date.ToString("MM/dd/yyyy a\\t h:mm ") + Model.Update_Date.ToString("tt").ToLower()) by @(ViewData["ModifiedByFullName"])</h6>
                }
            </div>
        </div>
    }

    <div class="completed-loader @(Model.Completed ? "completed-loader-visible" : "completed-loader-hidden" )">
        <div class="text-center completed-checkbox">
            <div class="form-check">
                <div class="checkbox">
                    <label><input type="checkbox" id="isCompletedModule" checked="checked" /><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span><span class="completed-label">Completed!</span></label>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<br />

<script>
    // Attach Event
    //reset the form to default database/brand new values.
    $("input[name='ModuleCommunicationNoConcerns']").on('click', function (event) {
        if ($("input[name='ModuleCommunicationNoConcerns']:checked").length)
        {
            $("input[name='ModuleCommunicationProgressTowardGenEd']").prop('checked', false);
            $("input[name='ModuleCommunicationAreaOfNeed']").prop('checked', false);
            $("input[name='ModuleCommunicationDeaf']").prop('checked', false);
            $("input[name='ModuleCommunicationLimitedEnglish']").prop('checked', false);

            $("#MeetNeedByOtherDescription").val('');
            $("input[name=MetByGoal]").prop('checked', false);
            $("input[name=MetByAccommodation]").prop('checked', false);
            $("input[name=MetByOther]").prop('checked', false);
            $("#MeetByOtherTextArea p").hide();
        }
    });

    // Attach Event
    $("input[name='ModuleCommunicationProgressTowardGenEd']").on('click', function (event) {
        $("input[name='ModuleCommunicationNoConcerns']").prop('checked', false);
    });

    // Attach Event
    $("input[name='ModuleCommunicationAreaOfNeed']").on('click', function (event) {
        $("input[name='ModuleCommunicationNoConcerns']").prop('checked', false);
    });

    // Attach Event
    $("input[name='ModuleCommunicationDeaf']").on('click', function (event) {
        $("input[name='ModuleCommunicationNoConcerns']").prop('checked', false);
    });

    // Attach Event
    $("input[name='ModuleCommunicationLimitedEnglish']").on('click', function (event) {
        $("input[name='ModuleCommunicationNoConcerns']").prop('checked', false);
    });

    // Attach Event
    // if checkbox is selected than show text box.
    $("input:checkbox[name=MetByOther]").on('click', function (event) {
        if ($("input:checkbox[name=MetByOther]").is(':checked')) {
            $("#MeetByOtherTextArea p").show();
        }
        else {
            $("#MeetByOtherTextArea p").hide();
        }
    });

	/* Binding */
	/* tooltips */
	$('[data-toggle="tooltip"]').tooltip({
		trigger: 'manual'
	});

	///* Event */
	///* When a user clicks on the question mark icon we turn on tooltips */
	$('.tooltip-help').on('click', function () {
		$('[data-toggle="tooltip"]').tooltip('toggle');
	});

	$("#saveCommunicationCompleted").on("click", function (e) {
	    if (!$("input[name='ModuleCommunicationNoConcerns']").is(':checked')) {
	        if ($("#PLAAFP_Strengths").val().length == 0) {
	            alert('The following field is required not to be empty: Strengths');
	            return false;
	        }

	        if ($("#PLAAFP_Concerns").val().length == 0) {
	            alert('The following field is required not to be empty: Concerns');
	            return false;
	        }

	        if ($("#ModuleCommunicationAreaOfNeedDescription").val().length == 0) {
	            alert('The following field is required not to be empty: Area of Need');
	            return false;
	        }

	        if ($(".needsCheckbox input[type='checkbox']").not(":checked").length == 3) {
	            alert("At least one check mark under 'met by' should be checked");
	            return false;
	        }
	    }

	    $("#Completed").val(true);
	    $(".modal-body form").submit();
	});

	$("#isCompletedModule").on("click", function () {
	    var IEPId = $("#studentIEPId").val();

	    $.ajax({
	        type: 'GET',
	        url: '/ModuleSection/ModuleCompleted',
	        data: { stdIEPId: IEPId, module: "Communication" },
	        dataType: "json",
	        success: function (data) {
	            if (data.Result == "success") {
	                $(".completed-loader").fadeOut();
	                $("#Completed").val(false);

	                $("#CommunicationWidget .hero-widget").removeClass("module-completed");
	            } else {
	                console.log("Error when updating the module.")
	            }
	        },
	        error: function (data) {
	            console.log("Unable to mark Health Module as complete.");
	        }
	    });
	});
</script>