@model GreenBushIEP.Models.ILPUser

@{
    ViewBag.Title = "Create a New User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section stylesheets {
    @Styles.Render("~/Content/transition.css")
    @Styles.Render("~/Content/chosen.css")
    @Styles.Render("~/Content/createUser.css")
}

<style>
    .panel-primary > .panel-heading {
        color: #fff !important;
        background-color: #337ab7 !important;
        border-color: #337ab7 !important;
    }

    .btn-filter {
        outline: -webkit-focus-ring-color auto 1px;
    }

    .btn-info {
        color: #fff !important;
        background-color: #5bc0de !important;
        border-color: #46b8da !important;
    }

    input.input-validation-error {
        border: 2px solid #e80c4d;
    }
</style>

@using (Html.BeginForm("CreateILPUser", "Manage", new { }, FormMethod.Post, new { enctype = "multipart/form-data", id = "UserForm" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-2 pull-right">
                @Html.ActionLink(" ", "Index", "ILP", null, new { id = "backtoportal", title = "Cancel action and go back to my current users list", role = "button", @class = "glyphicon glyphicon-arrow-left btn btn-info pull-right", data_ftrans = "slide reverse ", data_ajax = "false", style = "margin-top:20px; margin-bottom:10px;font-size:20px;font-weight:bold;" })
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => Model.User.UserID)
            <ul class="breadcrumb">
                <li>@Html.ActionLink((string)(ViewBag.RoleName + " Portal").ToString(), "Portal", "Home", null, new { style = "font-size: 30px;", data_ftrans = "slide reverse ", data_ajax = "false" })</li>
                <li class="active" style="font-size: 20px;">@ViewBag.Title</li>
            </ul>
            <div class="col-md-10">
                <div class="input-group">
                    <img src="@(string.IsNullOrEmpty(Model.User.ImageURL) ? "/Content/Images/newILPUser.png" : "/Avatar/" + Model.User.ImageURL.ToString())" alt="" title="" class="img-circle pull-left" height="100" width="100" id="avatarImage" />
                    <div class="input-group">
                        <span class="btn btn-default btn-file" style="top: 30px; left: 15px;">
                            Browse <input type="file" name="adminpersona" id="adminpersona" accept="image/gif, image/jpeg, image/png">
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <div class="alert alert-danger" id="alertMessage" role="alert" style="display: none;">
            <strong class="moreinfo">Oh snap!</strong>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-id-card-o" title="User Role" aria-hidden="true"></i>
                    </span>
                    <select class="form-control" id="role" Name="role" required="required">
                        @if(Int32.Parse(Model.User.RoleID) < 8)
                        {
                            <option value="7">Admin</option>
                        }
                        @if (Int32.Parse(Model.User.RoleID) < 9)
                        {
                            <option value="8">Instructor</option>
                        }
                        <option value="9">Viewer</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-key" aria-hidden="true"></i>
                    </span>
                    @Html.EditorFor(model => model.User.TeacherID, new { htmlAttributes = new { @class = "form-control", id = "teacherId", Name = "teacherId", placeholder = "Teacher ID if applicable", title = "The Teacher ID", maxlength = 20 } })
                    @Html.ValidationMessageFor(model => model.User.TeacherID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-user" title="First Name"></i>
                    </span>
                    @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control", id = "firstname", Name = "firstname", placeholder = "Legal First Name", required = "required" } })
                    @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-user" title="Last Name"></i>
                    </span>
                    @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control", id = "lastname", Name = "lastname", placeholder = "Legal Last Name", required = "required" } })
                    @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-envelope" title="User Email"></i>
                    </span>
                    @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", id = "email", Name = "email", type = "email", placeholder = "User email", required = "required", pattern = "([A-Za-z0-9][._]?)+[A-Za-z0-9]@[A-Za-z0-9]+(\\.?[A-Za-z0-9]){2}\\.(com?|net|org|us|edu)+(\\.[A-Za-z0-9]{2,4})?", title = "Must be a valid email address." } })
                    @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group" id="listOfDistricts">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-home" title="User District" aria-hidden="true"></i>
                    </span>
                    @Html.DropDownListFor(model => Model.Locations, new SelectList(Model.Locations, "LocationID", "LocationName"), new { @id = "misDistrict", Name = "misDistrict", @class = "form-control chosen-select", multiple = "multiple", data_placeholder = "Choose a location...", style = "min-height: 49px;" })
                </div>
            </div>
        </div>
        <div class="form-group" style="padding: 0 20px 20px;">
            <button type="submit" class="btn btn-info btn-lg" disabled="disabled" data_ftrans="slide reverse" style="width: 100%;">
                <span class="glyphicon glyphicon-ok-sign"></span> <span id="ActionButton">Save</span>
            </button>
        </div>
        <br>
        <div class="ajax-loader fadeIntoYou" style="visibility: hidden; width: 100%;">
            <img src="/Content/Images/processing.gif" class="img-responsive" alt="loading content">
        </div>
    </div>
}

<!-- loading the file even though it's an ajax call -->
<!--<var data-reload="true" data-src="/Scripts/AddUsers.js"></var>-->

@section scripts {

    @Scripts.Render("~/Scripts/bootstrap-mutliselect.js")
    @Scripts.Render("~/Scripts/fasw.transitions.js")
    @Scripts.Render("~/Scripts/AddILPUser.js")
}