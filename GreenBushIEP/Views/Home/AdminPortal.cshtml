@model GreenBushIEP.Models.PortalViewModel

@{
    ViewBag.Title = "Level 3 Portal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section stylesheets {
    @Styles.Render("~/Content/transition.css")
    @Styles.Render("~/Content/misportal.css?v1.2")
    @Styles.Render("~/Content/chosen.css")
}

<div class="container">
    <h1>@ViewBag.Title</h1>
    <div class="user-head">
        <a href="/Manage/Edit/@(Model.user.UserID)" class="inbox-avatar" data-ftrans="slide">
            <img width="65" height="65" src="@(string.IsNullOrEmpty(Model.user.ImageURL) ? "/Content/Images/newAdmin.png" : "/Avatar/" + Model.user.ImageURL  )">
        </a>
    </div>
    <h2>
        <a href="/Manage/Edit/@(Model.user.UserID)" data-ftrans="slide">@ViewBag.DisplayName</a> <small> - my current list of users</small>
    </h2>
    @if ((Model.draftIeps != null && Model.draftIeps.Count > 0) || (Model.dueIeps != null && Model.dueIeps.Count > 0) || (Model.evalsDue != null && Model.evalsDue.Count > 0))
    {
        <a href="#" class="notification" data-ftrans="slide" id="notificationBtn"><i class="fa fa-bell" title="You have pending actions" data-toggle="tooltip"></i> Pending Notifications</a>
    }
    <hr>
    <div class="row">
        <div class="col-md-12">
            <div id="user-toggle" class="pull-right">
                <div class="user-toggle-item">
                    <a id="add-student-user" class="btn btn-primary btn-circle btn-xl" data-ftrans="slide" href="/Manage/CreateStudent"><i class="fa fa-child" title="Create a New Student" data-toggle="tooltip"></i></a>
                </div>
                <div class="user-toggle-item">
                    <a id="reports" class="btn btn-primary btn-circle btn-xl" data-ftrans="slide" href="/Home/Reports"><i class="fa fa-file" title="Reports" data-toggle="tooltip"></i></a>
                </div>
            </div>
        </div>
    </div>
    <div class="alert alert-info hidden" role="alert" id="alertMessage">
        <button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <span class="moreinfo"><strong>Results!</strong> Some filler text until the action happens.</span>
    </div>
    <form id="filterMyUserList" action="/Home/FilterMyUserList" method="post">
        <div class="panel panel-primary filterable">
            <div class="panel-heading">
                <h3 class="panel-title">My Users </h3>
                <select name="userRoles" id="userRoles"><option value="-1" @(ViewData["selectedUserRoles"] == null || Convert.ToInt32(ViewData["selectedUserRoles"]) == -1 ? "selected=selected" : string.Empty)>All Roles</option><option value="4" @(ViewData["selectedUserRoles"] != null && Convert.ToInt32(ViewData["selectedUserRoles"]) == 4 ? "selected=selected" : string.Empty)>Level 2</option><option value="6" @(ViewData["selectedUserRoles"] != null && Convert.ToInt32(ViewData["selectedUserRoles"]) == 6 ? "selected=selected" : string.Empty)>Level 1</option><option value="5" @(ViewData["selectedUserRoles"] != null && Convert.ToInt32(ViewData["selectedUserRoles"]) == 5 ? "selected=selected" : string.Empty)>Student</option></select>
                <button class="btn btn-default btn btn-sm btn-filter pull-right" type="button"><span class="glyphicon glyphicon-option-vertical"></span> Filter</button>
            </div>
            <div class="row showFilters">
                <div class="col-xs-12 col-md-3 pull-left">
                    <div class="form-group">
                        <label for="filterName">Name or KIDS ID</label>
                        <div class="input-group">
                            <span class="input-group-addon danger"><span class="fa fa-search"></span></span>
                            <select class="form-control chosen-select form-control" name="filterName" id="filterName">
                                <option value="-1">All Users</option>
                                @foreach (var user in Model.members)
                                {
                                    int selectedUserId = ViewData["selectedFilterName"] != null && Convert.ToInt32(ViewData["selectedFilterName"]) > 0 ? Convert.ToInt32(ViewData["selectedFilterName"]) : -1;
                                    if (user.RoleID == "5")
                                    {
                                        if (Model.activeEducationalStatuses.Contains(user.StatusCode))
                                        {
                                            <option value="@(user.UserID)" @(selectedUserId == user.UserID ? "selected='selected'" : "" )>@(user.LastName), @(user.FirstName) @(user.MiddleName) &dash; @(user.KidsID)</option>
                                        }
                                    }
                                    else
                                    {
                                        <option value="@(user.UserID)" @(selectedUserId == user.UserID ? "selected='selected'" : "" )>@(user.LastName), @(user.FirstName) @(user.MiddleName)</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-md-3 pull-left">
                    <div class="form-group">
                        <label for="userDistricts">District</label>
                        <div class="input-group">
                            <span class="input-group-addon danger"><span class="fa fa-building-o"></span></span>
                            <select class="form-control" name="userDistricts" id="userDistricts">
                                <option value="-1" selected="selected">All District</option>
                                @if (Model.districts.Count > 0)
                                {
                                    string selectedDistrictUSD = ViewData["selectedDistricts"] == null ? Model.districts.First().USD : ViewData["selectedDistricts"].ToString();
                                    foreach (var district in Model.districts)
                                    {
                                        <option @(district.USD == selectedDistrictUSD ? "selected='selected'" : string.Empty) value="@(district.USD)">@(district.DistrictName)</option>
                                    }
                                }
                                else
                                {
                                    <option>This user is not assigned to any districts.</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-md-2 pull-left">
                    <div class="form-group">
                        <label for="userBuildings">Building</label>
                        <div class="input-group">
                            <span class="input-group-addon danger"><span class="fa fa-building-o"></span></span>
                            <select class="form-control" name="userBuildings" id="userBuildings">
                                <option value="-1">All Buildings</option>
                                @if (Model.buildings.Count > 0)
                                {
                                    if (ViewData["selectedDistricts"] != null)
                                    {
                                        foreach (var building in Model.buildings.Where(b => b.USD == ViewData["selectedDistricts"].ToString()))
                                        {
                                            <option value="@building.BuildingID" data-district="@building.USD" @(ViewData["selectedBuildings"] != null && ViewData["selectedBuildings"].ToString() == building.BuildingID ? "selected='selected'" : "" )>@building.BuildingName</option>
                                        }
                                    }
                                    else
                                    {
                                        foreach (var building in Model.buildings)
                                        {
                                            <option value="@building.BuildingID" data-district="@building.USD" @(ViewData["selectedBuildings"] != null && ViewData["selectedBuildings"].ToString() == building.BuildingID ? "selected='selected'" : "" )>@building.BuildingName</option>
                                        }
                                    }
                                }
                                else
                                {
                                    <option>This user is not assigned to any buildings.</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-md-2 activeIEPCol @(ViewData["selectedUserRoles"] != null && ViewData["selectedUserRoles"].ToString() == "5" ? "" : "hidden")"">
                    <div class="form-group">
                        <label for="filterActive">IEP Status</label>
                        <div class="input-group">
                            <span class="input-group-addon danger"><span class="fa fa-building-o"></span></span>
                            <select class="form-control" name="filterActive" id="filterActive">
                                <option value="0" @(ViewData["selectedFilterActive"] == null || Convert.ToInt32(ViewData["selectedFilterActive"]) == -1 ? "selected='selected'" : "" )>All</option>
                                <option value="1" @(ViewData["selectedFilterActive"] != null && Convert.ToInt32(ViewData["selectedFilterActive"]) == 1 ? "selected='selected'" : "" )>Active IEP</option>
                                <option value="2" @(ViewData["selectedFilterActive"] != null && Convert.ToInt32(ViewData["selectedFilterActive"]) == 0 ? "selected='selected'" : "" )>Inactive IEP</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-md-2 activeIEPCol @(ViewData["selectedUserRoles"] != null && ViewData["selectedUserRoles"].ToString() == "5" ? "" : "hidden")">
                    <div class="form-group">
                        <label for="filterActive">Educational Status</label>
                        <div class="input-group">
                            <span class="input-group-addon danger"><span class="fa fa-building-o"></span></span>
                            <select class="form-control" name="statusActive" id="statusActive">
                                <option value="" @(ViewData["selectedStatusActive"] != null && Convert.ToInt32(ViewData["selectedStatusActive"]) == -1 ? "selected='selected'" : "" )>All</option>
                                <option value="1" @(ViewData["selectedStatusActive"] == null || Convert.ToInt32(ViewData["selectedStatusActive"]) == 1 ? "selected='selected'" : "" )>Active</option>
                                <option value="0" @(ViewData["selectedStatusActive"] != null && Convert.ToInt32(ViewData["selectedStatusActive"]) == 0 ? "selected='selected'" : "" )>Inactive</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="ajax-filter hidden">
                <img src="/Content/Images/search.gif" class="img-responsive" alt="filtering content">
            </div>
            <div class="ajax-loader">
                <img src="/Content/Images/loading-icon.gif" class="img-responsive" alt="loading content">
            </div>
            <div>
                @if (Model.members.Count > 0)
                {
                    <div class="list-group list-group-root well">

                        @foreach (var user in Model.members)
                        {
                            <div class="list-group-item" data-id="@(user.UserID)">

                                @switch (user.RoleID)
                                {
                                    case "4": //Teacher
                                        <i class="fa fa-graduation-cap" aria-hidden="true"></i>
                                        <a href="/Home/TeacherStudentsRole/@(user.UserID)" class="launchListOfStudents" data-ftrans="slide">
                                            <text>@user.FirstName @user.MiddleName  @user.LastName</text>
                                        </a>
                                        <button type="button" class="btn btn-info btn-action pull-right" data-id="@(user.UserID)" data-toggle="modal" data-target="#deleteUser">
                                            <span class="glyphicon glyphicon glyphicon-trash"></span>
                                        </button>
                                        <button type="button" class="btn btn-info btn-action pull-right" data-id="@(user.UserID)" data-toggle="modal" data-target="#assignBuilding">
                                            <span class="fa fa-building-o" aria-hidden="true"></span>
                                        </button>
                                        <a href="/Manage/Edit/@(user.UserID)" title="Edit an existing user" role="button" data-toggle="tooltip" class="btn btn-info btn-action pull-right edit-btn" data-ftrans="slide"><span class="glyphicon glyphicon-pencil"></span></a>
                                        break;
                                    case "6": //Nurse
                                        <i class="fa fa-magnet" aria-hidden="true"></i>
                                        <a href="/Home/TeacherStudentsRole/@(user.UserID)" class="launchListOfStudents" data-ftrans="slide">
                                            <text>@user.FirstName @user.MiddleName  @user.LastName</text>
                                        </a>
                                        <button type="button" class="btn btn-info btn-action pull-right" data-id="@(user.UserID)" data-toggle="modal" data-target="#deleteUser">
                                            <span class="glyphicon glyphicon glyphicon-trash"></span>
                                        </button>
                                        <button type="button" class="btn btn-info btn-action pull-right" data-id="@(user.UserID)" data-toggle="modal" data-target="#assignBuilding">
                                            <span class="fa fa-building-o" aria-hidden="true"></span>
                                        </button>
                                        <a href="/Manage/Edit/@(user.UserID)" title="Edit an existing user" role="button" data-toggle="tooltip" class="btn btn-info btn-action pull-right edit-btn" data-ftrans="slide"><span class="glyphicon glyphicon-pencil"></span></a>
                                        break;
                                    default:
                                        string htmlContent = "Start Date: ";
                                        htmlContent += user.hasIEP ? Convert.ToDateTime(user.IEPDate).ToString("MM/dd/yyyy") : "No Active IEP";
                                        htmlContent += "<br/>";
                                        htmlContent += "Evaluation Date: ";
                                        htmlContent += user.ReEvaluationDate != null ? user.ReEvaluationDate.Value.ToString("MM/dd/yyyy") : user.InitalEvaluationDate != null ? user.InitalEvaluationDate.Value.ToString("MM/dd/yyyy") : "No Date";

                                        <i class="fa fa-child" aria-hidden="true"></i>
                                        <span>@user.FirstName @user.MiddleName  @user.LastName</span>
                                        <i class="fas fa-ellipsis-v tip-auto" data-toggle="myToolTip" data-placement="right" data-html="true" title="@(htmlContent)"></i>
                                        if (user.hasIEP)
                                        {
                                            <a href="/Home/StudentProcedures?stid=@(user.UserID)" title="Launch the IEP for this student" role="button" data-ftrans="slide" class="btn btn-info btn-action pull-right startIEP">
                                                <span class="glyphicon glyphicon-log-out"></span>
                                            </a>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-info btn-action pull-right" data-id="@(user.UserID)" data-toggle="modal" data-target="#initIEP">
                                                <span class="glyphicon glyphicon-unchecked"></span>
                                            </button>
                                        }

                                        <a href="/Home/IEPFormModule?studentId=@(user.UserID)" title="Forms" role="button" data-toggle="tooltip" class="viewForms btn btn-info btn-action pull-right" data-ftrans="slide" id="viewFormsBtn">
                                            <span class="glyphicon glyphicon-folder-open"></span>
                                        </a>

                                        <button type="button" class="btn btn-info btn-action pull-right" data-id="@(user.UserID)" data-toggle="modal" data-target="#deleteUser">
                                            <span class="glyphicon glyphicon glyphicon-trash"></span>
                                        </button>
                                        <a href="/Manage/EditStudent/@(user.UserID)" title="Edit an existing student" role="button" data-toggle="tooltip" class="btn btn-info btn-action pull-right edit-btn" data-ftrans="slide"><span class="glyphicon glyphicon-pencil"></span></a>
                                        break;
                                }

                            </div>
                        }

                    </div>
                }
                <div class="list-group list-group-root well inactive-list hidden"></div>
            </div>
        </div>
    </form>
</div>

<!-- Modal -->
<div class="modal fadeInUp" id="deleteUser" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @Html.Hidden("id", 0)
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
                <h4 class="modal-title custom_align" id="Heading">Delete this User</h4>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <span class="glyphicon glyphicon-warning-sign"></span> Deleting a user also deletes all data in your database associated with them. Is this what you want to do? <strong>(can't be undone)</strong><br />
                    <br />
                    Type DELETE to confirm<br />
                    <input id="confirmDeletion" type="text" value="" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success" data-dismiss="modal"><span class="glyphicon glyphicon-ok-sign"></span> Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> No</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- end modal -->
<!-- Modal -->
<div class="modal fadeInUp" id="confirmRemoval" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @Html.Hidden("id", 0)
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
                <h4 class="modal-title custom_align" id="Heading">Remove this user from your list?</h4>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning" role="alert">
                    <span class="glyphicon glyphicon-warning-sign"></span> Do you want to remove this teacher from your list?<br />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="removeUser" class="btn btn-success" data-dismiss="modal"><span class="glyphicon glyphicon-ok-sign"></span> Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> No</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- end modal -->

@Html.Partial("~/Views/Home/_DashboardPartial.cshtml", null, new ViewDataDictionary { { "evalsDue", Model.evalsDue }, { "draftIEPS", Model.draftIeps }, { "dueIEPS", Model.dueIeps }, { "showDashboardNotification", Model.showDashboardNotification } })



@section scripts {
    @Scripts.Render("~/Scripts/bootstrap-mutliselect.js")
    @Scripts.Render("~/Scripts/fasw.transitions.min.js")
    @Scripts.Render("~/Scripts/adminportal.js?v1.11")
    @Scripts.Render("~/Scripts/jquery.maskedinput.min.js")
}
