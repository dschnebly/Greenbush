@model GreenBushIEP.Models.StudentGoalsViewModel

@if (Model.studentGoals.Count > 0)
{
    foreach (var studentGoal in Model.studentGoals)
    {
        var needsIN = (Model.studentGoals.IndexOf(studentGoal) == Model.studentGoals.Count - 1) ? "in" : "";
        var sGoal = studentGoal.goal;
        var ddlText = "";

        switch (sGoal.Module)
        {
            case "1": { ddlText = "Health"; break; }
            case "2": { ddlText = "Motor"; break; }
            case "3": { ddlText = "Communication"; break; }
            case "4": { ddlText = "Social-Emotional"; break; }
            case "5": { ddlText = "General Intelligence"; break; }
            case "6": { ddlText = "Academic Performance"; break; }
            case "7": { ddlText = "Reading"; break; }
            case "8": { ddlText = "Math"; break; }
            case "9": { ddlText = "Written Language"; break; }
        } //end switch

        var evalText = "";
        var evalValues = "";
        foreach (var ep in studentGoal.evaluationProcedures.Where(g => g.goalID == studentGoal.goal.goalID))
        {
            evalValues += ep.evaluationProcedureID + ",";
            switch (ep.evaluationProcedureID)
            {
                case 1: { evalText += "Written Observation, "; break; }
                case 2: { evalText += "Written Performance, "; break; }
                case 3: { evalText += "Oral Performance, "; break; }
                case 4: { evalText += "Criterion-Referenced Test, "; break; }
                case 5: { evalText += "Time Sample, "; break; }
                case 6: { evalText += "Demonstration/Performance, "; break; }
                case 7: { evalText += "Other, "; break; }
            } //end switch
        }

		<div class="row StudentGoal">
			@using (Html.BeginForm("EditStudentGoalsReadOnly", "ModuleSection", FormMethod.Post, new { @class = "goalForm" }))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.Hidden("studentId", Model.studentId)
				@Html.Hidden("IEPid", Model.iepId)

                <div class="col-md-12">
                    <div class="panel-group" id="accordion@(studentGoal.goal.goalID)">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    <input type="hidden" name="StudentGoalId" value="@(studentGoal.goal.goalID)" />
                                    <a data-toggle="collapse" data-parent="#accordion@(studentGoal.goal.goalID)" href="#collapse@(studentGoal.goal.goalID)">
                                        <i class="fa fa-trophy"></i><span class="studentGoalLabel" style="margin-left:5px;">@(studentGoal.goal.Title)</span>
                                    </a>
                                </h4>
                            </div>
                            <div id="collapse@(studentGoal.goal.goalID)" class="panel-collapse collapse @(needsIN)">
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label class="standard-font-size" for="StudentGoalTitle">Student Goal</label>
                                        <div class="input-group">
                                            <div class="input-group-btn bs-dropdown-to-select-group">
                                                <button type="button" class="btn btn-default dropdown-toggle as-is bs-dropdown-to-select" data-toggle="dropdown" style="font-size:16px; height: 49px;">
                                                    <span data-bind="bs-drp-sel-label">@(ddlText)</span>
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <input type="hidden" name="StudentGoalSelectedModule@(studentGoal.goal.goalID)" value="@(studentGoal.goal.Title)">
                                            </div>
                                            <input type="text" name="StudentGoalTitle@(studentGoal.goal.goalID)" class="form-control StudentGoalTitle standard-font-size" placeholder="Goal Title" value="@(studentGoal.goal.Title)" readonly="readonly" />
                                            <span class="input-group-addon">
                                                <i class="fa fa-handshake-o StudentGoalNeedsService" aria-hidden="true" style="font-size:18px; opacity: @(studentGoal.goal.hasSerivce ? "1.0" : "0.2")" data-toggle="tooltip" data-placement="bottom" title="This column indicates if a service will be required to achieve this goal."></i>
                                                <input name="hasService@(studentGoal.goal.goalID)" value="@(studentGoal.goal.hasSerivce.ToString().ToLower())" type="hidden">
                                            </span>
                                        </div>
                                    </div>
                                    <label class="standard-font-size" for="StudentGoalAnnualGoal" data-toggle="tooltip" data-placement="right" title="Enter a long term goal you would like the student to achieve.">Measurable Annual Goal: <span style="font-size: 9pt; font-weight: normal;">(Please include Timeframe, Criteria, Behavior and Condition)</span></label><br />
                                    <div class="form-group">
                                        <textarea class="form-control StudentGoalAnnualGoal standard-font-size" name="StudentGoalAnnualGoal@(studentGoal.goal.goalID)" placeholder="Enter a measurable annual goal for this student" rows="5" data-validate="true" maxlength="500" data-toggle="tooltip" data-placement="bottom" title="500 character limit." readonly="readonly">@(studentGoal.goal.AnnualGoal)</textarea>
                                    </div>
                                    <label class="standard-font-size" for="StudentGoalBaseline" data-toggle="tooltip" data-placement="right" title="Enter a long term goal you would like the student to achieve.">Goal Baseline</label><br />
                                    <div class="form-group">
                                        <input type="text" value="@(studentGoal.goal.Baseline)" class="form-control standard-font-size aStudentBaseLine" name="StudentGoalBaseline@(studentGoal.goal.goalID)" placeholder="Add a Goal Baseline" readonly="readonly" />
                                    </div>
                                    <label class="standard-font-size" for="StudentGoalStateStandards" data-toggle="tooltip" data-placement="right" title="Enter a long term goal you would like the student to achieve.">State Standards</label>&nbsp;<a href="http://www.ksde.org/Teaching-Learning/Academic-Standards" target="_blank" style="font-size: 8pt; margin-left: 0.8em;">KSDE website&nbsp;<i class="glyphicon glyphicon-new-window"></i></a><br />
                                    <div class="form-group">
                                        <input type="text" value="@(studentGoal.goal.StateStandards)" class="form-control standard-font-size studentGoalStateStandards" name="StudentGoalStateStandards@(studentGoal.goal.Baseline)" placeholder="Add State Standards" readonly="readonly" />
                                    </div>
                                    <label class="standard-font-size" for="StudentEvaluationProcedures">Evaluation Procedure</label>
                                    <div class="form-group">
                                        <p class="read-only">@evalText.Trim().TrimEnd(',')</p>
                                        <input type="hidden" value="@evalValues.Trim().TrimEnd(',')" name="StudentGoalBenchmarkMethods@(studentGoal.goal.goalID)" />
                                        <select name="StudentGoalBenchmarkMethods0" class="StudentGoalBenchmarkMethods hidden" data-validate="true"><option selected >@evalValues.Trim().TrimEnd(',')</option></select>
                                    </div>

                                    @Html.Partial("~/Views/Home/_GoalsProgress.cshtml", studentGoal, new ViewDataDictionary { { "isReadOnly", Model.isReadOnly } })

                                    <div class="col-md-12" style="text-align:center; margin-top: 15px;">
                                        <div class="form-group">
                                            <button type="button" class="formbtn btn btn-primary btn-lg SaveForm"><i class="glyphicon glyphicon-floppy-disk"></i>&nbsp;Save Draft</button>
                                            <button type="button" class="formbtn btn btn-success btn-lg saveCompletedGoal"><i class="glyphicon glyphicon-check"></i>&nbsp;Save &amp; Complete</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                //keep these at the bottom so it doesn't throw off the save form collection count
				@Html.Hidden("isReadOnly", Model.isReadOnly)
				@Html.Hidden("canAddProgress", Model.canAddProgress)
			}

		</div>

	}
}