@model GreenBushIEP.Models.UserDetailsViewModel

@{
    ViewBag.Title = "Create a New User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section stylesheets {
    @Styles.Render("~/Content/transition.css")
    @Styles.Render("~/Content/chosen.css")
    @Styles.Render("~/Content/createUser.css")
}

@using (Html.BeginForm("Create", "Manage", new { }, FormMethod.Post, new { enctype = "multipart/form-data", id = "UserForm" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-2 pull-right">
                @Html.ActionLink(" ", "Portal", "Home", null, new { id = "backtoportal", title = "Cancel action and go back to my current users list", role = "button", @class = "glyphicon glyphicon-arrow-left btn btn-info pull-right", data_ftrans = "slide reverse ", data_ajax = "false", style = "margin-top:20px; margin-bottom:10px;font-size:20px;font-weight:bold;" })
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => Model.user.UserID)
            <ul class="breadcrumb">
                <li>@Html.ActionLink((string)(ViewBag.RoleName + " Portal").ToString(), "Portal", "Home", null, new { style = "font-size: 30px;", data_ftrans = "slide reverse ", data_ajax = "false" })</li>
                <li class="active" style="font-size: 20px;">@ViewBag.Title</li>
            </ul>
            <div class="col-md-10">
                <div class="input-group">
                    <img src="@(string.IsNullOrEmpty(Model.user.ImageURL) ? "/Content/Images/newUser.png" : "/Avatar/" + Model.user.ImageURL.ToString())" alt="" title="" class="img-circle pull-left" height="100" width="100" id="avatarImage" />
                    <div class="input-group">
                        <span class="btn btn-default btn-file" style="top: 30px; left: 15px;">
                            Browse <input type="file" name="adminpersona" id="adminpersona" accept="image/gif, image/jpeg, image/png">
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="alert alert-danger" id="alertMessage" role="alert" style="display: none;">
            <strong class="moreinfo">Oh snap!</strong>
        </div>

        @if (Convert.ToInt32(Model.submitter.RoleID) <= 3)
        {
            <div class="form-group">
                <div class="col-md-12">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-id-card-o" title="User Role" aria-hidden="true"></i>
                        </span>
                        <select class="form-control" id="role" Name="role" required="required">
                            @if (Int32.Parse(Model.submitter.RoleID) < 2)
                            {
                                <option value="2" @(Model.user.RoleID == "2" ? "selected='selected'" : "" )>Level 4</option>
                            }
                            @if (Int32.Parse(Model.submitter.RoleID) < 3)
                            {
                                <option value="3" @(Model.user.RoleID == "3" ? "selected='selected'" : "" )>Level 3</option>
                            }
                            <option value="4" @(Model.user.RoleID == "4" ? "selected='selected'" : "" )>Level 2</option>
                            <option value="6" @(Model.user.RoleID == "6" ? "selected='selected'" : "")>Level 1</option>
                        </select>
                    </div>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-key" aria-hidden="true"></i>
                    </span>
                    @Html.EditorFor(model => model.user.TeacherID, new { htmlAttributes = new { @class = "form-control", id = "teacherId", Name = "teacherId", placeholder = "Teacher ID if applicable", title = "The Teacher ID", maxlength = 20 } })
                    @Html.ValidationMessageFor(model => model.user.TeacherID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-user" title="First Name"></i>
                    </span>
                    @Html.EditorFor(model => model.user.FirstName, new { htmlAttributes = new { @class = "form-control", id = "firstname", Name = "firstname", placeholder = "Legal First Name", required = "required" } })
                    @Html.ValidationMessageFor(model => model.user.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-user" title="Last Name"></i>
                    </span>
                    @Html.EditorFor(model => model.user.LastName, new { htmlAttributes = new { @class = "form-control", id = "lastname", Name = "lastname", placeholder = "Legal Last Name", required = "required" } })
                    @Html.ValidationMessageFor(model => model.user.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-envelope" title="User Email"></i>
                    </span>
                    @Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "form-control", id = "email", Name = "email", type = "email", placeholder = "User email", required = "required", pattern = "([A-Za-z0-9][._]?)+[A-Za-z0-9]@[A-Za-z0-9]+(\\.?[A-Za-z0-9]){2}\\.(com?|net|org|us|edu)+(\\.[A-Za-z0-9]{2,4})?", title = "Must be a valid email address." } })
                    @Html.ValidationMessageFor(model => model.user.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group" id="listOfDistricts">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-home" title="User District" aria-hidden="true"></i>
                    </span>
                    @Html.DropDownListFor(model => Model.districts, new SelectList(Model.districts, "USD", "DistrictName"), new { @id = "misDistrict", Name = "misDistrict", @class = "form-control chosen-select", multiple = "multiple", data_placeholder = "Choose a district...", style = "min-height: 49px;" })
                </div>
            </div>
        </div>
        <div class="form-group" id="userWorksAtTheseBuildings">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="fa fa-building" title="User Building" aria-hidden="true"></i>
                    </span>
                    @*<select id="AttendanceBuildingId" name="AttendanceBuildingId" class="list-group form-control studentBuilding districtOnly chosen-select" data-validate="true" data-placeholder="Choose a building...">*@
                    <select id="AttendanceBuildingId" Name="AttendanceBuildingId" type="text" class="form-control multiselect multiselect-icon" multiple="multiple" role="multiselect">
                        @if (Model.buildings != null)
                        {
                            foreach (var building in Model.buildings)
                            {
                                <option value="@building.BuildingID" data-icon="glyphicon-home" selected="selected">@building.BuildingName</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="form-group" style="padding: 0 20px 20px;">
            <button type="submit" class="btn btn-info btn-lg" disabled="disabled" data_ftrans="slide reverse" style="width: 100%;">
                <span class="glyphicon glyphicon-ok-sign"></span> <span id="ActionButtonText">Save</span>
            </button>
        </div>
    </div>
    <br />
    <div class="ajax-loader" style="visibility: hidden; width: 100%;">
        <img src="~/Content/Images/processing.gif" class="img-responsive" alt="loading content" />
    </div>
}

<!-- loading the file even though it's an ajax call -->
<var data-reload="true" data-src="/Scripts/AddUsers.js"></var>

@section scripts {

    @Scripts.Render("~/Scripts/bootstrap-mutliselect.js")
    @Scripts.Render("~/Scripts/fasw.transitions.js")
    @Scripts.Render("~/Scripts/AddUsers.js")
}