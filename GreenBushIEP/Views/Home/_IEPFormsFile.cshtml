@using GreenBushIEP.Models
@model GreenBushIEP.Models.IEPFormFileViewModel

@{
   
    Layout = "~/Views/Shared/_Layout.cshtml";
    var imageChecked = Request.Url.Scheme + "://" + Request.Url.Authority + Url.Content("~/Content/Images/check_yes.png");
    var imageNotChecked = Request.Url.Scheme + "://" + Request.Url.Authority + Url.Content("~/Content/Images/check_no.png");	
	
}

@section stylesheets {
    @Styles.Render("~/Content/transition.css")
	@Styles.Render("~/Content/iepFormLayout.css?1.1")
}


<div class="transition-page" style="margin-bottom: 45px; display: none;">
	 <div class="alert alert-danger" role="alert" id="alertMessage" style="display: none; margin-top: 20px;">
            <button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <span class="moreinfo"><strong>Results!</strong> </span>
        </div>
    <div class="container" style="min-height: 1250px; width: 725px;">
        <div class="row" style="margin-top: 25px; margin-left: -200px; position: fixed;">
            <div class="col-md-11" style="height:400px">
                <form action=@Url.Action("DownloadPDF", "Home") id="frmPrint" class="form-print" method="post">                    
                    <input type="button" value="Print" onclick="PrintText();" class="btn btn-info print" /><br/>
					<input type="button" id="btnSave" value="Save" onclick="SaveText();" class="btn btn-info print" style="margin-top:5px;display:none"/>
                    <input type="button" value="Archive" onclick="ArchiveText();" class="btn btn-info print" style="margin-top:5px" />
                    <input type="hidden" id="printText" name="printText" />					
					<input type="hidden" id="printText2" name="printText2" />	<!--used for more than one primary contact-->				
					<input type="hidden" id="printText3" name="printText3" />	<!--used for more than one primary contact-->				
                    <input type="hidden" id="isArchive" name="isArchive" />
                    <input type="hidden" id="studentName" name="studentName" value="" />
                    <input type="hidden" id="studentId" name="studentId" value="@Model.studentId" />
                    <input type="hidden" id="iepID" name="iepID" value="@Model.iepId" />   
                    <input type="hidden" id="isIEP" name="isIEP" value="0" /> 
                    <input type="hidden" id="formName" name="formName" value="@Model.fileDesc" /> 
					<input type="hidden" id="fileName" name="fileName" value="@Model.fileName" /> 
					<input type="hidden" id="isSave" name="isSave" />
                </form>		
				 <form action=@Url.Action("DownloadPDFMulti", "Home") id="frmPrint2" class="form-print" method="post">                    
                 
                   	
					<input type="hidden" id="multiContactPrintText" name="multiContactPrintText"  />	<!--used for more than one primary contact-->				
                  
                    <input type="hidden" id="studentName" name="studentName" value="" />
                    <input type="hidden" id="studentId" name="studentId" value="@Model.studentId" />
                    <input type="hidden" id="iepID" name="iepID" value="@Model.iepId" />   
                     
                    <input type="hidden" id="formName" name="formName" value="@Model.fileDesc" /> 
					<input type="hidden" id="fileName" name="fileName" value="@Model.fileName" /> 
					
                </form>	
            </div>
        </div>
        <div class="row">
            <div class="col-md-2 pull-right">			 
                @Html.ActionLink(" ", null, null, null, new { href = string.Format("/Home/IEPFormModule?studentId={0}{1}", Model.studentId, ViewBag.ReturnToHome ? "&home=true" : ""), id = "backtoportal", title = "Cancel action and go back to my current users list", role = "button", @class = "glyphicon glyphicon-remove btn btn-info pull-right", style = "margin-top:20px;margin-bottom:10px;margin-right: -75px;font-size:20px;font-weight:bold;" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div align="left">
                    <div class="col-md-12">						
                        @Html.Partial("~/Views/Form/" + Model.fileName + ".cshtml", Model.fileModel, new ViewDataDictionary {
						   { "IEPObj", Model.ActiveIEP },
						   { "teamEval", Model.teamEval },
						   { "summaryPerf", Model.summaryPerformance },
						   { "conferenceSummary", Model.conferenceSummary },
						   { "formAmend", Model.formAmend },
						   { "formMtgConsent", Model.formMtgConsent },
						   { "formMtgExcusal", Model.formMtgExcusal },
						   { "formIEPTeamConsider", Model.formIEPTeamConsider },
						   { "formMani", Model.formMani },
						   { "formNotice", Model.formNotice },
						   { "formConsentMedicaid", Model.formConsentMedicaid },
						   { "formPhysician", Model.formPhysician },
						   { "formPWN", Model.formPWN },
						   { "formPWNEval", Model.formPWNEval },
						   { "formPWNRevAll", Model.formPWNRevAll },
						   { "formPWNRevPart", Model.formPWNRevPart },
						   { "formRevAll", Model.formRevAll },
						   { "formRevPart", Model.formRevPart },
						   { "formTransRequest", Model.formTransRequest },
						   { "continuousLearningPlan", Model.continuousLearningPlan },
						   { "childOutcome", Model.childOutcome },
						   { "formTransReferral", Model.formTransReferral }						   
					   })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>	
    document.addEventListener("DOMContentLoaded", function (event) {

		var id = getUrlParameter('saved');
		if (id == 2) {
				_showAlert('There was an error while trying to save the data.', false);
			}else if (id == 1) {
				_showAlert('The form was successfully saved.', true);			
			}

		if ( $( ".savdDraftAllowed" ).length ) {
			$("#btnSave").show();
		}

        var body = document.getElementsByTagName("body")[0];
        body.classList += ' ' + 'fadeInToBackground';

        var el = document.getElementsByClassName("body-content")[0], c = el.style;
        c.borderLeft = "1px solid #000";
        c.borderRight = "1px solid #000";
        c.boxShadow = "10px 10px 25px #333";
        c.position = "relative";
        c.top = "15px";
        c.backgroundColor = "#ffffff";
        c.marginBottom = "5px";

        setTimeout(function () {
            var tp = document.getElementsByClassName("transition-page")[0];
            tp.style.display = "block";

            var className = 'transition-page-scaleUpCenter';
            if (el.classList) {
                el.classList.add(className);
            } else {
                el.className += ' ' + className;
            }
        }, 200);

        // attach event to the close button
        // return user to the teacherportal page if they chose NOT to print the consent form. WE CANNOT GO FORWARD WITH THIS STUDENT
        document.getElementById('backtoportal').onclick = function (event) {
            event.preventDefault();

            var content = document.getElementsByClassName('body-content');
            content[0].classList.add('transition-page-scaleDownCenter');

            setTimeout(function () {
                window.location = document.getElementById('backtoportal').getAttribute("href");
            }, 100);
        }

		/* Event */
		/* When the user clicks the close button on the alert  */
		$("#alertMessage").on("click", function (e) {
			$(e.currentTarget).hide();
		});

		$('.printMulti').click(function () {
			
			var form1 = document.getElementById("frmPrint2");
			var moduleElements = $(this).parent().next('.module-page');
		
			if (moduleElements.length == 1 ) {
			
				//allow printing of multiple contacts
				var markup = moduleElements[0].innerHTML;			
				$("#multiContactPrintText").val(markup);
			
				form1.submit();

			}
        });
		

        //setup up hidden checkbox images for printing to pdf
        $('input:checkbox').change(function () {
			if ($(this).is(":checked")) {				
                $(this).addClass("menuitemshow");
				$(this).next('img.imgCheck').attr("src", '@(@imageChecked)');               
            } else {
				$(this).next('img.imgCheck').attr("src", '@(@imageNotChecked)');				
			}
        });

		$("textarea").bind("paste", function(e){
			// access the clipboard using the api
			var pastedData = e.originalEvent.clipboardData.getData('text');
			var existingData = this.value;
			var text = existingData + pastedData;

			var newLineCount = text.split('\n').length;
			var returnCount = text.split('\r').length;

			var maxLength = $(this).attr("maxLength");

			if (maxLength > 0 && (text.length + newLineCount + returnCount) > maxLength) {
				e.preventDefault();				
				_showAlert("The text exceeds the " + maxLength + " character limit for this field.", false);				
				return;
			}
			else {
				var nextParagraph = $(this).next(".input-value");				
				var currentVal = pastedData; 
				var padVal = $(this).attr('data-val');			

				if (padVal != undefined && padVal != "") {
					var currLength = currentVal.length;
					var spacesToAdd = parseInt(padVal) - currLength;
					for (var i = 0; i < spacesToAdd; i++) {
						currentVal = currentVal + '\u00A0';
					}
				}

				nextParagraph.text(currentVal.replace(/\n/g, "new-line-val"));
			}
		});
				
		$("textarea").keyup(function () {
			var nextParagraph = $(this).next(".input-value");
			var currentVal = $(this).val();
			var padVal = $(this).attr('data-val');
			if (padVal != undefined && padVal != "") {
				var currLength = currentVal.length;
				var spacesToAdd = parseInt(padVal) - currLength;
				for (var i = 0; i < spacesToAdd; i++){
					currentVal = currentVal + '\u00A0';
				}

			}
			nextParagraph.text(currentVal.replace(/\n/g, "new-line-val"));
		});

		$("textarea").each(function(){
			this.value = this.value.replace(/new-line-val/g,"\n");
		});
    });

	function scrollToMessage() {
		var container = $('div.transition-page'); 
        var scrollTo = $('#alertMessage'); 
  
        // Calculating new position of scrollbar 
        var position = scrollTo.offset().top  
                - container.offset().top  
                + container.scrollTop(); 
  
        // Setting the value of scrollbar 
        container.scrollTop(position); 
    }

	function _showAlert(message, positive) {
		if (positive) {
			if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
				if (positive) {
					$("#alertMessage").removeClass('alert-danger').addClass('alert-success');
				}
				else {
					$("#alertMessage").removeClass('alert-success').addClass('alert-danger');
				}

				$("#alertMessage .moreinfo").html(message);
				$("#alertMessage").show();
			}
		}
		else {
			alert(message);
        }
		
	}

	function getUrlParameter(sParam) {
		var sPageURL = decodeURIComponent(window.location.search.substring(1)),
			sURLVariables = sPageURL.split('&'),
			sParameterName,
			i;

		for (i = 0; i < sURLVariables.length; i++) {
			sParameterName = sURLVariables[i].split('=');

			if (sParameterName[0] === sParam) {
				return sParameterName[1] === undefined ? true : sParameterName[1];
			}
		}
	}

    function PrintText() {
		var form1 = document.getElementById("frmPrint");		
		var moduleElements = document.getElementsByClassName("module-page");
		

		if (moduleElements.length == 1) {
			var markup = moduleElements[0].innerHTML;
			var markup = $(".module-page").html();
			$("#printText").val(markup);
			$("#isArchive").val(0);
			$("#isSave").val(0);
			form1.submit();
		}
		else {
			//allow printing of multiple contacts
			var markup = moduleElements[0].innerHTML;
			var markup2 = moduleElements[1].innerHTML;

			var markup3 = "";
			if (moduleElements.length > 2) {
				markup3 = moduleElements[2].innerHTML;
				$("#printText3").val(markup3);
			}
			
			$("#printText").val(markup);
			$("#printText2").val(markup2);
			$("#isArchive").val(0);
			$("#isSave").val(0);
			form1.submit();
		}
	}	

    function ArchiveText() {
		var form1 = document.getElementById("frmPrint");
		var moduleElements = document.getElementsByClassName("module-page");

		if (moduleElements.length == 1) {
			var markup = moduleElements[0].innerHTML;
			var markup = $(".module-page").html();
			$("#printText").val(markup);
			$("#isArchive").val(1);
			$("#isSave").val(0);
			form1.submit();
		}
		else {
			//allow printing of multiple contacts
			var markup = moduleElements[0].innerHTML;
			var markup2 = moduleElements[1].innerHTML;
			var markup3 = "";
			if (moduleElements.length > 2) {
				markup3 = moduleElements[2].innerHTML;
				$("#printText3").val(markup3);
			}
			
			$("#printText").val(markup);
			$("#printText2").val(markup2);
			$("#isArchive").val(1);
			$("#isSave").val(0);
			form1.submit();	


		}        
	}

	function SaveText(e) {
		var form1 = document.getElementById("frmPrint");
		var markup = document.getElementsByClassName("module-page")[0].innerHTML;

		$(".isDate").each(function () {
			var dateStr = $(this).text();
			if (dateStr != "") {
				var isValidDate = isDate(dateStr);
				if (!isValidDate) {					

					$("#alertMessage .moreinfo").html(dateStr + " is an invalid date. Please use the format: mm/dd/yyyy");
					$("#alertMessage")
						.fadeTo(3000, 500)
						.slideUp(1000, function () {
							$("#alertMessage").slideUp(1000);
						});

					e.preventDefault();
					return false;
				}
			}
		});		 


		 $("#printText").val(markup);	
		 $("#isArchive").val(0);
		 $("#isSave").val(1);
		 form1.submit();
	}

	function isDate(str) {    
	  var parms = str.split(/[\.\-\/]/);
	  var yyyy = parseInt(parms[2],10);
	  var mm   = parseInt(parms[0],10);
	  var dd   = parseInt(parms[1],10);
	  var date = new Date(yyyy,mm-1,dd,0,0,0,0);
	  return mm === (date.getMonth()+1) && dd === date.getDate() && yyyy === date.getFullYear();
	}

	function isDecimal(str) {
		if (str != undefined && str != "") {
			return !isNaN(str);
		}
	}

	function clearContents(element) {
		element.value = '';
	}

</script>
