@model GreenBushIEP.Models.tblIEPHealth

<div class="modal-header">

    <button type="button" class="close" data-dismiss="modal"><span class="glyphicon glyphicon-remove-circle" style="font-size: 30px;"></span></button>
    <button type="button" class="print-module" id="printModuleBtn" onclick="printModule('Health');"><span class="glyphicon glyphicon-print" style="font-size: 27px;padding-right:8px" title="Print Module"></span></button>
    <button type="button" class="tooltip-help" data-toggle="tooltip" data-placement="bottom" title="Follow the tooltips to learn how to user this form"><span class="glyphicon glyphicon-question-sign" style="font-size: 30px;"></span></button>
    <h4 class="modal-title pull-left" id="myModalLabel" style="font-size: 30px;"><i class="fa fa-heartbeat" aria-hidden="true" style="font-size: smaller; "></i>&nbsp;Health</h4>
    <div class="module-user-name">@(ViewBag.studentName)</div>
</div>
<div class="modal-body">
    @using (Html.BeginForm("EditHealth", "ModuleSection", FormMethod.Post, new { id = "healthFrm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IEPHealthID)
        @Html.HiddenFor(model => model.Completed)

        <div class="funkyradio">
            <div class="funkyradio-success">
                <input type="checkbox" id="HealthNoConcerns" name="HealthNoConcerns" @(Model.NoConcerns ? "checked" : String.Empty ) />
                <label for="HealthNoConcerns" class="standard-font-size">No Concerns</label>
            </div>
            <div class="funkyradio-primary">
                <input type="checkbox" id="HealthProgressTowardGenEd" name="HealthProgressTowardGenEd" @(Model.ProgressTowardGenEd ? "checked" : String.Empty) />
                <label for="HealthProgressTowardGenEd" class="standard-font-size" style="">Health Concerns progressing with General Education Supports</label>
            </div>
            <div class="funkyradio-primary">
                <input type="checkbox" id="HealthDiagnosis" name="HealthDiagnosis" @(Model.Diagnosis ? "checked" : String.Empty) />
                <label for="HealthDiagnosis" class="standard-font-size">Concerns that impact ability to learn or access to general curriculum</label>
            </div>
        </div>
        <fieldset class="form-group">
            <label class="standard-font-size" style="padding: 25px 0 15px;">Does the student have a hearing impairment?</label>&nbsp;&nbsp;
            <div class="falsetrueswitch" style="display: inline-block; vertical-align: middle;">
                <input type="checkbox" name="HearingImpaired" id="HearingImpaired" class="falsetrueswitch-checkbox" @(Model.HearingImpaired != false ? "checked" : String.Empty ) />
                <label class="falsetrueswitch-label" for="HearingImpaired">
                    <span class="falsetrueswitch-inner"></span>
                    <span class="falsetrueswitch-switch"></span>
                </label>
            </div>
        </fieldset>
        <fieldset class="form-group" id="HearingImpairmentInfo">
            <legend style="border-bottom: 0; font-weight: bold; margin-bottom: 0; font-size:18px">
                <label class="standard-font-size"> Hearing Screening Date:</label>&nbsp;&nbsp;<input type="text" data-val="true" data-val-date="The field Hearing Date must be a date." data-val-required="The Hearing Date field is required." id="HearingDate" name="HearingDate" value="@(Model.HearingDate.ToString("MM/dd/yyyy"))" />
                &nbsp;&nbsp;
                <label class="radio-inline standard-font-size"><input type="radio" name="HearingResult" value="1" style="position: relative; right: 5px;" @(Model.HearingResult == 1 ? "checked" : String.Empty)>Pass</label>
                <label class="radio-inline standard-font-size"><input type="radio" name="HearingResult" value="0" style="position: relative; right: 5px;" @(Model.HearingResult == 0 ? "checked" : String.Empty)>Failed</label>
                <label class="radio-inline standard-font-size"><input type="radio" name="HearingResult" value="-1" style="position: relative; right: 5px;" @(Model.HearingResult == -1 ? "checked" : String.Empty)>Unable to Test</label>
            </legend>
        </fieldset>
        <fieldset class="form-group">
            <label class="standard-font-size" style="padding: 25px 0 15px;">Does the student have a visual impairment?</label>&nbsp;&nbsp;
            <div class="falsetrueswitch" style="display: inline-block; vertical-align: middle;">
                <input type="checkbox" name="VisionImpaired" id="VisionImpaired" class="falsetrueswitch-checkbox" @(Model.VisionImpaired ? "checked" : String.Empty ) />
                <label class="falsetrueswitch-label" for="VisionImpaired">
                    <span class="falsetrueswitch-inner"></span>
                    <span class="falsetrueswitch-switch"></span>
                </label>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <legend style="border-bottom: 0; font-weight: bold; margin-bottom: 0; font-size:18px">
                <label class="standard-font-size">Visual Screening Date:</label>&nbsp;&nbsp;<input type="text" data-val="true" data-val-date="The field Vision Date must be a date." data-val-required="The Vision Date field is required." id="VisionDate" name="VisionDate" value="@(Model.VisionDate.ToString("MM/dd/yyyy"))" />
                &nbsp;&nbsp;
                <label class="radio-inline standard-font-size"><input type="radio" name="VisionResult" value="1" style="position: relative; right: 5px;" @(Model.VisionResult == 1 ? "checked" : String.Empty)>Pass</label>
                <label class="radio-inline standard-font-size"><input type="radio" name="VisionResult" value="0" style="position: relative; right: 5px;" @(Model.VisionResult == 0 ? "checked" : String.Empty)>Failed</label>
                <label class="radio-inline standard-font-size"><input type="radio" name="VisionResult" value="-1" style="position: relative; right: 5px;" @(Model.VisionResult == -1 ? "checked" : String.Empty)>Unable to Test</label>
            </legend>
        </fieldset>
        <fieldset class="form-group">
            <label class="standard-font-size" style="padding: 25px 0 15px;">Does this student require a Health Care Plan?</label>&nbsp;&nbsp;
            <div class="falsetrueswitch" style="display: inline-block; vertical-align: middle;">
                <input type="checkbox" name="ModuleHealthCarePlan" id="ModuleHealthCarePlan" class="falsetrueswitch-checkbox" @(Model.HealthCarePlan.HasValue && Model.HealthCarePlan.Value ? "checked" : String.Empty ) />
                <label class="falsetrueswitch-label" for="ModuleHealthCarePlan">
                    <span class="falsetrueswitch-inner"></span>
                    <span class="falsetrueswitch-switch"></span>
                </label>
            </div>
            <div class="form-check" id="AdditionalHealthInfoTextArea">
                <p style="display: @(Model.HealthCarePlan.HasValue && Model.HealthCarePlan.Value == true ? "block;" : "none;")">
                    <label class="standard-font-size">Notes</label><br />
                    <textarea class="form-control standard-font-size" id="AdditionalHealthInfo" name="AdditionalHealthInfo" type="text" rows="3" maxlength="2000" data-toggle="tooltip" data-placement="bottom" title="2000 character limit.">@(Model.AdditionalHealthInfo)</textarea>
                </p>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <div>
                <label class="standard-font-size" style="padding: 25px 0 15px;">Present Levels of Academic Achievement and Functional Performance (PLAAFP)</label>
            </div>
            <label style="font-size: 18px; font-weight:400; padding: 0 0 1px;">Strengths</label>
            <div class="form-check">
                <textarea class="form-control standard-font-size" id="PLAAFP_Strengths" name="PLAAFP_Strengths" rows="3" placeholder="Describe Strengths">@(Model.PLAAFP_Strengths)</textarea>
            </div>
            <label style="font-size: 18px; font-weight:400; padding: 10px 0 1px;">Concerns (including Baseline) </label>
            <div class="form-check">
                <textarea class="form-control standard-font-size" id="PLAAFP_Concerns" name="PLAAFP_Concerns" rows="3" placeholder="Describe Concerns (including Baseline)">@(Model.PLAAFP_Concerns)</textarea>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <label class="standard-font-size" style="padding: 25px 0 15px;">Area of Need which Impacts Performance</label>
            <div class="form-check">
                <textarea class="form-control standard-font-size" id="AreaOfNeedDescription" name="AreaOfNeedDescription" rows="3">@(Model.AreaOfNeedDescription)</textarea>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <label class="standard-font-size" style="padding: 25px 0 15px; padding-bottom: 0; margin-bottom: 0;">This need will be met by</label>
            <div class="form-check">
                <div class="checkbox needsCheckbox">
                    <label><input type="checkbox" name="MetByGoal" @(Model.NeedMetByGoal == true ? "checked" : String.Empty)><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>Goal</label><br />
                    <label><input type="checkbox" name="MetByAccommodation" @(Model.NeedMetByAccommodation == true ? "checked" : String.Empty)><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>Accommodation(s), Modification(s), and/or Supplemental Aid</label><br />
                    <label><input type="checkbox" name="MetByOther" @(Model.NeedMetByOther == true ? "checked" : String.Empty)><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>Other</label><br />
                </div>
            </div>
            <div class="form-check" id="MeetByOtherTextArea">
                <p style="display: @(Model.NeedMetByOther == true ? "block;" : "none;")">
                    <span class="standard-font-size"> *if other, please explain</span><br />
                    <textarea class="form-control standard-font-size" id="MeetNeedByOtherDescription" name="MeetNeedByOtherDescription" type="text" rows="3" maxlength="2000" data-toggle="tooltip" data-placement="bottom" title="2000 character limit.">@(Model.NeedMetByOtherDescription)</textarea>
                </p>
            </div>
        </fieldset>
        <div class="row noPrint">
            <div class="col-md-12" style="text-align:center;">
                <div class="form-group">
                    <button type="submit" class="formbtn btn btn-primary btn-lg"><i class="glyphicon glyphicon-floppy-disk"></i>&nbsp;Save Draft</button>
                    <button type="button" class="formbtn btn btn-success btn-lg" id="saveHealthCompleted"><i class="glyphicon glyphicon-check"></i>&nbsp;Save &amp; Complete</button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @if (ViewBag.modifiedByFullName != String.Empty)
                {
                    <h6 class="pull-right modified">last updated on @(Model.Update_Date.ToString("MM/dd/yyyy a\\t h:mm ") + Model.Update_Date.ToString("tt").ToLower()) by @(ViewData["ModifiedByFullName"])</h6>
                }
            </div>
        </div>
    }

    <div class="completed-loader @(Model.Completed ? "completed-loader-visible" : "completed-loader-hidden" )">
        <div class="text-center completed-checkbox">
            <div class="form-check">
                <div class="checkbox">
                    <label><input type="checkbox" id="isCompletedModule" checked="checked" /><span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span><span class="completed-label">Completed!</span></label>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Attach Event
    //reset the form to default database/brand new values.
    $("input[name='HealthNoConcerns']").on('click', function (event) {
        if ($("input[name='HealthNoConcerns']").is(':checked')) {
            $("input[name='HealthProgressTowardGenEd']").prop('checked', false);
            $("input[name='HealthDiagnosis']").prop('checked', false);
            $("input[name='HealthHearingDate']")[0].value = new Date().toJSON().slice(0, 10);
            $("input[name='HealthVisionDate']")[0].value = new Date().toJSON().slice(0, 10);
            $("input[name='HealthHearingResult']").prop('checked', false);
            $("input[name='HealthVisionResult']").prop('checked', false);
            $("input[name='VisionImpaired']").prop('checked', false);
            $("input[name='HearingImpaired']").prop('checked', false);
            $("input[name='HealthCarePlan']").prop('checked', false);
            $("#MeetNeedByOtherDescription").val('');
            $("input[name=MetByGoal]").prop('checked', false);
            $("input[name=MetByAccommodation]").prop('checked', false);
            $("input[name=MetByOther]").prop('checked', false);
            $("#MeetByOtherTextArea p").hide();
        }
    });

    // Attach Event
    // if an option other than no concern is selected than turn off noconcern
    $("input[name='HealthProgressTowardGenEd']").on('click', function (event) {
        $("input[name='HealthNoConcerns']").prop('checked', false)
    });

    $("input[name='HealthDiagnosis']").on('click', function (event) {
        $("input[name='HealthNoConcerns']").prop('checked', false)
    });

    // Attach Event
    // if checkbox is selected than show text box.
    $("input:checkbox[name=MetByOther]").on('click', function (event) {
        if ($("input:checkbox[name=MetByOther]").is(':checked')) {
            $("#MeetByOtherTextArea p").show();
        }
        else {
            $("#MeetByOtherTextArea p").hide();
        }
    });

    $("input:checkbox[name=ModuleHealthCarePlan]").on('click', function (event) {
        if ($("input:checkbox[name=ModuleHealthCarePlan]").is(':checked')) {
            $("#AdditionalHealthInfoTextArea p").show();
        }
        else {
            $("#AdditionalHealthInfo").val("");
            $("#AdditionalHealthInfoTextArea p").hide();
        }
    });

    /* Binding */
    /* tooltips */
    $('[data-toggle="tooltip"]').tooltip({
        trigger: 'manual'
    });

    ///* Event */
    ///* When a user clicks on the question mark icon we turn on tooltips */
    $('.tooltip-help').on('click', function () {
        $('[data-toggle="tooltip"]').tooltip('toggle');
    });

    $("#HearingDate").datepicker({
        dateFormat: "mm/dd/yy"
    })

    $("#VisionDate").datepicker({
        dateFormat: "mm/dd/yy"
    })

    // Attach Event
    // When the user clicks the "save & complete" button
    $("#saveHealthCompleted").on("click", function (e) {

        // validation.
        var lastCheck = new Date($("#HearingDate").val());
        if (Math.round(new Date() - lastCheck) / (1000 * 3600 * 24 * 365.25) > 3) // validate within 3 years.
        {
            alert('Hearing Screening Date needs to be within the last 3 years');
            return false;
        }

        var lastCheck = new Date($("#VisionDate").val());
        if (Math.round(new Date() - lastCheck) / (1000 * 3600 * 24 * 365.25) > 2) // validate within 2 years.
        {
            alert('Vision Screening Date needs to be within the last 2 years');
            return false;
        }

        if (!$("input[name='HealthNoConcerns']").is(':checked')) {
            if ($("#PLAAFP_Strengths").val().length == 0) {
                alert('The following field is required not to be empty: Strengths');
                return false;
            }

            if ($("#PLAAFP_Concerns").val().length == 0) {
                alert('The following field is required not to be empty: Concerns');
                return false;
            }

            if ($("#AreaOfNeedDescription").val().length == 0) {
                alert('The following field is required not to be empty: Area of Need');
                return false;
            }

            if ($(".needsCheckbox input[type='checkbox']").not(":checked").length == 3) {
                alert("At least one check mark under 'met by' should be checked");
                return false;
            }
        }

        $("#Completed").val(true);
        $(".modal-body form").submit();
    });

    // Attach Event
    // when the use clicks the completed checkbox
    $("#isCompletedModule").on("click", function () {
        var IEPId = $("#studentIEPId").val();

        $.ajax({
            type: 'GET',
            url: '/ModuleSection/ModuleCompleted',
            data: { stdIEPId: IEPId, module: "Health" },
            dataType: "json",
            success: function (data) {
                if (data.Result == "success") {
                    $(".completed-loader").fadeOut();
                    $("#Completed").val(false);

                    $("#HealthWidget .hero-widget").removeClass("module-completed");
                } else {
                    console.log("Error when updating the module.")
                }
            },
            error: function (data) {
                console.log("Unable to mark Health Module as complete.");
            }
        });
    });

</script>