@using GreenBushIEP.Models
@model StudentTransitionViewModel

<style>
    .courseOfStudyHeader {
        font-weight: bold;
        margin-top: 0;
    }

    .assessment-needs {
        min-width: 18rem;
    }

    .vcenter {
        display: flex;
        align-items: center;
    }

    .studentClass {
        font-size: 14px;
        font-weight: bold;
    }

    .activity-tabs li {
        min-width: 15rem;
    }

    .activity-textarea {
        width: 100%;
        padding: 8px;
        /*margin: 10px 0 ;*/
    }

    .newTransitionLabel {
        margin-left: 8px;
    }

    #transitionAssessmentContainer {
        margin-bottom: 20px;
    }

    .transitionAssessment {
        margin-bottom: 10px;
    }

    .addiontionalServiceInfo {
        padding: 10px 15px 0 15px;
    }


    /* ---- all this for inline editable text box ---- */

    .editableform {
        margin-bottom: 0; /* overwrites bootstrap margin */
    }

        .editableform .control-group {
            margin-bottom: 0; /* overwrites bootstrap margin */
            white-space: nowrap; /* prevent wrapping buttons on new line */
            line-height: 20px; /* overwriting bootstrap line-height. See #133 */
        }

        .editableform .form-control {
            width: auto;
            height: 30px;
        }

    .editable-buttons {
        display: inline-block; /* should be inline to take effect of parent's white-space: nowrap */
        vertical-align: top;
        margin-left: 7px;
        /* inline-block emulation for IE7*/
        zoom: 1;
        *display: inline;
    }

        .editable-buttons.editable-buttons-bottom {
            display: block;
            margin-top: 7px;
            margin-left: 0;
        }

    .editable-input {
        vertical-align: top;
        display: inline-block; /* should be inline to take effect of parent's white-space: nowrap */
        width: auto; /* bootstrap-responsive has width: 100% that breakes layout */
        white-space: normal; /* reset white-space decalred in parent*/
        /* display-inline emulation for IE7*/
        zoom: 1;
        *display: inline;
    }

    .editable-buttons .editable-cancel {
        margin-left: 5px;
    }

    /*for jquery-ui buttons need set height to look more pretty*/
    .editable-buttons button.ui-button-icon-only {
        height: 24px;
        width: 30px;
    }

    .editableform-loading {
        height: 25px;
        width: auto;
        min-width: 25px;
    }

    .editable-inline .editableform-loading {
        background-position: left 5px;
    }

    .editable-error-block {
        max-width: 300px;
        margin: 5px 0 0 0;
        width: auto;
        white-space: normal;
    }

        /*add padding for jquery ui*/
        .editable-error-block.ui-state-error {
            padding: 3px;
        }

    .editable-error {
        color: red;
    }

    /* ---- For specific types ---- */

    /* move datepicker icon to center of add-on button. See https://github.com/vitalets/x-editable/issues/183 */

    .editable-checklist label {
        white-space: nowrap;
    }

    /* set exact width of textarea to fit buttons toolbar */
    .editable-wysihtml5 {
        width: 566px;
        height: 250px;
    }

    /* clear button shown as link in date inputs */
    .editable-clear {
        clear: both;
        font-size: 0.9em;
        text-decoration: none;
        text-align: right;
    }

    /* IOS-style clear button for text inputs */
    .editable-clear-x {
        display: block;
        width: 13px;
        height: 13px;
        position: absolute;
        opacity: 0.6;
        z-index: 100;
        top: 50%;
        right: 6px;
        margin-top: -6px;
    }

        .editable-clear-x:hover {
            opacity: 1;
        }

    .editable-pre-wrapped {
        white-space: pre-wrap;
    }

    .editable-container.editable-popup {
        max-width: none !important; /* without this rule poshytip/tooltip does not stretch */
    }

    .editable-container.popover {
        width: auto; /* without this rule popover does not stretch */
    }

    .editable-container.editable-inline {
        display: inline-block;
        vertical-align: middle;
        width: auto;
        /* inline-block emulation for IE7*/
        zoom: 1;
        *display: inline;
    }

    .editable-container.ui-widget {
        font-size: inherit; /* jqueryui widget font 1.1em too big, overwrite it */
        z-index: 9990; /* should be less than select2 dropdown z-index to close dropdown first when click */
    }

    .editable-click,
    a.editable-click,
    a.editable-click:hover {
        text-decoration: none;
        border-bottom: dashed 1px #2fccff;
        font-size: 1.3em;
        font-weight: bold;
    }

        .editable-click.editable-disabled,
        a.editable-click.editable-disabled,
        a.editable-click.editable-disabled:hover {
            color: #585858;
            cursor: default;
            border-bottom: none;
        }

    .editable-empty, .editable-empty:hover, .editable-empty:focus {
        font-style: italic;
        color: #DD1144;
        /* border-bottom: none; */
        text-decoration: none;
    }

    .editable-unsaved {
        font-weight: bold;
    }
    /* ---- End editable textbox ---- */


    .onoffswitch2 {
        position: relative;
        width: 90px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }

    .onoffswitch2-checkbox {
        display: none;
    }

    .onoffswitch2-label {
        display: block;
        overflow: hidden;
        cursor: pointer;
        border: 2px solid #999999;
        border-radius: 5px;
    }

    .onoffswitch2-inner {
        display: block;
        width: 200%;
        margin-left: -100%;
        -moz-transition: margin 0.3s ease-in 0s;
        -webkit-transition: margin 0.3s ease-in 0s;
        -o-transition: margin 0.3s ease-in 0s;
        transition: margin 0.3s ease-in 0s;
    }

        .onoffswitch2-inner:before, .onoffswitch2-inner:after {
            display: block;
            float: left;
            width: 50%;
            height: 30px;
            padding: 0;
            line-height: 30px;
            font-size: 14px;
            color: white;
            font-family: Trebuchet, Arial, sans-serif;
            font-weight: bold;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }

        .onoffswitch2-inner:before {
            content: "YES";
            padding-left: 10px;
            background-color: #2FCCFF;
            color: #FFFFFF;
        }

        .onoffswitch2-inner:after {
            content: "NO";
            padding-right: 10px;
            background-color: #EEEEEE;
            color: #999999;
            text-align: right;
        }

    .onoffswitch2-switch {
        display: block;
        width: 18px;
        margin: 0px;
        background: #FFFFFF;
        border: 2px solid #999999;
        border-radius: 5px;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 68px;
        -moz-transition: all 0.3s ease-in 0s;
        -webkit-transition: all 0.3s ease-in 0s;
        -o-transition: all 0.3s ease-in 0s;
        transition: all 0.3s ease-in 0s;
        background-image: -moz-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);
        background-image: -webkit-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);
        background-image: -o-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);
        background-image: linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);
    }

    .onoffswitch2-checkbox:checked + .onoffswitch2-label .onoffswitch2-inner {
        margin-left: 0;
    }

    .onoffswitch2-checkbox:checked + .onoffswitch2-label .onoffswitch2-switch {
        right: 0px;
    }

    #transitionEducationGoalContainer, #transitionEmploymentGoalContainer, #transitionIndependentGoalContainer,
    #transitionInstructionServiceContainer, #transitionRelatedServiceContainer, #transitionDailyServiceContainer, #transitionFunctionalServiceContainer, #transitionLeisureServiceContainer {
        padding: 10px;
        box-shadow: 0px 0px 0px 2px #f5f5f5;
        margin: 10px 0;
    }
</style>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal"><span class="glyphicon glyphicon-remove-circle" style="font-size: 30px;"></span></button>
    <button type="button" class="tooltip-help" data-toggle="tooltip" data-placement="bottom" title="Follow the tooltips to learn how to user this form"><span class="glyphicon glyphicon-question-sign" style="font-size: 30px;"></span></button>
    <h4 class="modal-title" style="font-size: 30px;">
        <i class="glyphicon glyphicon-random" aria-hidden="true" style="font-size: smaller; "></i>&nbsp;Student Transition
    </h4>
</div>
<div class="modal-body">

    <div class="alert alert-danger" id="alertMessage" role="alert" style="display: none;">
        <strong class="moreinfo">Oh snap!</strong>
    </div>

    <div class="row DOC @(!Model.isDOC ? "hidden" : String.Empty )">
        <div class="col-md-12 well">

            If a student is in a State adult correctional facility, the Secretary of the Department of Corrections (DOC) is obligated to make FAPE available according to an IEP
            that meets the requirements of federal and state laws and regulations for each student with a disability. However, the correctional institution or facility may modify
            the student's IEP or placement if it can demostrate a bona fide security or compelling penological interest that cannot otherwise
            be accmomodated. The following laws and regulations are not required for the students in adult correctional factilites:
            <ul>
                <li>participation of students in state or local assemssmentsl and &lt;needs to be a statement on the IEP&gt;</li>
                <li>
                    transitions planning and services with respect to an disabled student whose eligibility for special education services will end,
                    because of the student's age, before the student is eligible to be released from correctional facility based on consideration of the student's
                    sentence and elibiglty for early release.
                </li>
            </ul>
            <fieldset class="form-group">
                <label style="padding: 25px 0 15px;">Is the adult learner's Anticipated Release Date prior to their 21st birthday?</label>&nbsp;&nbsp;
                <div class="onoffswitch2" style="display: inline-block; vertical-align: middle;">
                    <input type="checkbox" name="isStudentBirthdayAgeOver21" id="isStudentBirthdayAgeOver21" class="onoffswitch2-checkbox">
                    <label class="onoffswitch2-label" for="isStudentBirthdayAgeOver21">
                        <span class="onoffswitch2-inner"></span>
                        <span class="onoffswitch2-switch"></span>
                    </label>
                </div>
            </fieldset>

        </div>
    </div>

    <div class="@(!Model.isDOC ? String.Empty : "hidden" )" id="studentBirthdayAgeOver21">
        <div class="row">
            <div class="col-md-12">

                <div class="row form-group" style="margin-bottom: 0px;">
                    <div class="col-xs-12">
                        <ul class="nav nav-pills nav-justified thumbnail setup-panel">
                            <li class="active">
                                <a href="#step-1">
                                    <h4 class="list-group-item-heading">Step 1</h4>
                                    <p class="list-group-item-text">Transition Assessments</p>
                                </a>
                            </li>
                            <li class="@(Model.assessments.Count > 0 ? String.Empty : "disabled")">
                                <a href="#step-2">
                                    <h4 class="list-group-item-heading">Step 2</h4>
                                    <p class="list-group-item-text">Transition Goals</p>
                                </a>
                            </li>
                            <li class="@(Model.goals.Count > 0  ? String.Empty : "disabled")">
                                <a href="#step-3">
                                    <h4 class="list-group-item-heading">Step 3</h4>
                                    <p class="list-group-item-text">Transition Services</p>
                                </a>
                            </li>
                            <li class="@(Model.services.Count > 0 ? String.Empty : "disabled")">
                                <a href="#step-4">
                                    <h4 class="list-group-item-heading">Step 4</h4>
                                    <p class="list-group-item-text">Course of Study</p>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="row setup-content" id="step-1">
                    <div class="col-xs-12">
                        <div class="col-md-12 well" style="background-color: transparent;">

                            <div class="panel-group hidden transitionAssessment" id="assessmentDefault">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <input type="hidden" name="transitionAssessmentIdDefault" id="transitionAssessmentIdDefault" value="0" />
                                        <h4 class="panel-title">
                                            <a class="btnToggle" data-toggle="collapse" data-parent="assessmentDefault" href="#collapse">
                                                <span class="glyphicon glyphicon-random"></span><span class="newTransitionLabel">Transition Assessment - </span><span class="transitionTitleDate">xx</span>
                                                <span class="pull-right">
                                                    <i class="glyphicon glyphicon-trash deleteTransitionAssessment"></i>
                                                </span>
                                            </a>
                                        </h4>
                                    </div>
                                    <div id="collapse" class="panel-collapse">
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <fieldset class="form-group" style="margin-bottom: 5px;">
                                                        <label for="narrative">Narrative</label>
                                                        <textarea rows="3" name="transitionAssessmentNarrativeDefault" id="transitionAssessmentNarrativeDefault" style="width: 100%;"></textarea>
                                                    </fieldset>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-3">
                                                    <label for="completed">Completed On&nbsp;&nbsp;</label>
                                                    <div class="input-group" style="margin-bottom: 5px;">
                                                        <span class="input-group-addon" id="basic-addon1"><i class="glyphicon glyphicon-calendar"></i></span>
                                                        <input type="date" data-val="true" data-val-date="The field Start Date must be a date." data-val-required="The Anticipated Start Date field is required." id="transitionAssessmentCompletedDefault" name="transitionAssessmentCompletedDefault" class="form-control" aria-describedby="basic-addon1" value="">
                                                    </div>
                                                </div>
                                                <div class="col-md-9">
                                                    <label for="performance">Performance</label>
                                                    <textarea rows="2" name="transitionAssessmentPerformanceDefault" id="transitionAssessmentPerformanceDefault" style="width: 100%; margin-bottom: 5px;" class="form-group"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @using (Html.BeginForm("EditTransitionAssessements", "ModuleSection", null, FormMethod.Post, new { id = "transitionAssessmentForm" }))
                            {
                                @Html.Hidden("studentId", Model.studentId)
                                @Html.Hidden("IEPid", Model.iepId)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="row">
                                    <div class="col-md-12" style="margin-bottom: 12px;">
                                        <button id="newTransitionAssessment" class="btn btn-default" type="button">New Transition Assesssment&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionAssessmentContainer">

                                        @if (Model.assessments.Count > 0)
                                        {
                                            foreach (var assessment in Model.assessments)
                                            {
                                                <div class="panel-group transitionAssessment" id="assessment@(assessment.TransitionAssementID)">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" id="transitionAssessmentId@(assessment.TransitionAssementID)" name="transitionAssessmentId@(assessment.TransitionAssementID)" value="@(assessment.TransitionAssementID)" />
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="assessment@(assessment.TransitionAssementID)" href="#collapseAssessment@(assessment.TransitionAssementID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="newTransitionLabel">Transition Assessment - </span><span class="transitionTitleDate">@(assessment.Create_Date.ToString("M/d/yyyy"))</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteTransitionAssessment"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseAssessment@(assessment.TransitionAssementID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <fieldset class="form-group" style="margin-bottom: 5px;">
                                                                            <label for="narrative">Narrative</label>
                                                                            <textarea rows="3" name="transitionAssessmentNarrative@(assessment.TransitionAssementID)" id="transitionAssessmentNarrative@(assessment.TransitionAssementID)" style="width: 100%;">@(assessment.Narrative)</textarea>
                                                                        </fieldset>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-3">
                                                                        <label for="completed">Completed On&nbsp;&nbsp;</label>
                                                                        <div class="input-group" style="margin-bottom: 5px;">
                                                                            <span class="input-group-addon" id="basic-addon1"><i class="glyphicon glyphicon-calendar"></i></span>
                                                                            <input type="date" data-val="true" data-val-date="The field Start Date must be a date." data-val-required="The Anticipated Start Date field is required." id="transitionAssessmentCompleted@(assessment.TransitionAssementID)" name="transitionAssessmentCompleted@(assessment.TransitionAssementID)" class="form-control" aria-describedby="basic-addon1" value="@(assessment.CompletedOn?.ToString("yyyy-MM-dd"))" />
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-9">
                                                                        <label for="performance">Performance</label>
                                                                        <textarea rows="2" name="transitionAssessmentPerformance@(assessment.TransitionAssementID)" style="width: 100%; margin-bottom: 5px;" class="form-group">@(assessment.Performance)</textarea>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="input-group">
                                            <div class="input-group-addon assessment-needs">Transition Needs</div>
                                            <input type="text" class="form-control" name="transitionNeeds" value="@(Model.transition.Assessment_Needs)">
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="input-group">
                                            <div class="input-group-addon assessment-needs">Transition Strengths</div>
                                            <input type="text" class="form-control" name="transitionStrengths" value="@(Model.transition.Assessment_Strengths)">
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="input-group">
                                            <div class="input-group-addon assessment-needs">Transition Preferences</div>
                                            <input type="text" class="form-control" name="transitionPreferences" value="@(Model.transition.Assessment_Prefrences)">
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="input-group">
                                            <div class="input-group-addon assessment-needs">Transition Interest</div>
                                            <input type="text" class="form-control" name="transitionInterest" value="@(Model.transition.Assessment_Interest)">
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="activate-step-2" class="btn btn-primary btn-lg" style="margin-top: 20px;" type="button">Add Transition Goals</button>
                                    </div>
                                </div>

                            }
                        </div>
                    </div>
                </div>
                <div class="row setup-content" id="step-2">
                    <div class="col-xs-12">
                        <div class="col-md-12 well" style="background-color: transparent;">

                            <!-- Default Goal Template -->
                            <div class="panel-group transitionGoal hidden" id="transitionGoalDefault">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <input type="hidden" name="transitionGoalId" id="transitionGoalId" value="0" />
                                        <input type="hidden" name="transitionGoalType" id="transitionGoalType" value="" />
                                        <h4 class="panel-title">
                                            <a class="btnToggle" data-toggle="collapse" data-parent="transitionGoalDefault" href="#collapse">
                                                <span class="glyphicon glyphicon-random"></span><span class="transitionGoalLabel" style="margin-left:8px;">Education/Training Goal</span>
                                                <span class="pull-right">
                                                    <i class="glyphicon glyphicon-trash deleteTransitionGoal"></i>
                                                </span>
                                            </a>
                                        </h4>
                                    </div>
                                    <div id="collapse" class="panel-collapse collapse in">
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <select class="form-control" id="transitionGoalGraduation" name="transitionGoalGraduation">
                                                        <option>After Graduation</option>
                                                        <option>After leaving High School</option>
                                                        <option>Upon completion of High School Program</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-2 vcenter" style="height: 49px;">
                                                    <span class="transitionGoalStudentClass">@(@Model.student.FirstName)&nbsp;@(Model.student.LastName)</span>&nbsp;&nbsp;
                                                    <span>Will</span>
                                                </div>
                                                <div class="col-md-3">
                                                    <input class="form-control" type="text" id="transitionGoalBehavior" name="transitionGoalBehavior" placeholder="Behavior" title="Behavior" value="" />
                                                </div>
                                                <div class="col-md-3">
                                                    <input class="form-control" type="text" id="transitionGoalHow" name="transitionGoalHow" placeholder="Where and How" title="Where and How" value="" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @using (Html.BeginForm("EditTransitionGoals", "ModuleSection", null, FormMethod.Post, new { id = "transitionGoalForm" }))
                            {
                                @Html.Hidden("studentId", Model.studentId)
                                @Html.Hidden("IEPid", Model.iepId)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="newEducationGoal" class="btn btn-default new-button-min-width" type="button">New Education/Training Goal&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionEducationGoalContainer">
                                        @if (Model.goals.Count > 0)
                                        {
                                            foreach (var goal in Model.goals.Where(g => g.GoalType == "education"))
                                            {
                                                <div class="panel-group transitionEducation" id="transitionEducationIndentity@(goal.TransitionGoalID)">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionEducationId@(goal.TransitionGoalID)" id="transitionEducationId@(goal.TransitionGoalID)" value="@(goal.TransitionGoalID)">
                                                            <input type="hidden" name="transitionGoalTypeEducation@(goal.TransitionGoalID)" id="transitionGoalTypeEducation@(goal.TransitionGoalID)" value="education">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="transitionEducationIndentity@(goal.TransitionGoalID)" href="#collapseTransitionEducation@(goal.TransitionGoalID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionGoalLabel" style="margin-left:8px;">Education/Training Goal</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteTransitionGoal"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionEducation@(goal.TransitionGoalID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-4">
                                                                        <select class="form-control" id="transitionEducationGraduation@(goal.TransitionGoalID)" name="transitionEducationGraduation@(goal.TransitionGoalID)">
                                                                            <option @(goal.CompletetionType == "After Graduation" ? "selected='selected'" : String.Empty )>After Graduation</option>
                                                                            <option @(goal.CompletetionType == "After leaving High School" ? "selected='selected'" : String.Empty )>After leaving High School</option>
                                                                            <option @(goal.CompletetionType == "Upon completion of High School Program" ? "selected='selected'" : String.Empty )>Upon completion of High School Program</option>
                                                                        </select>
                                                                    </div>
                                                                    <div class="col-md-2 vcenter" style="height: 49px;">
                                                                        <span class="transitionGoalStudentClass">Demo&nbsp;Student</span>&nbsp;&nbsp;
                                                                        <span>Will</span>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <input class="form-control" type="text" id="transitionEducationBehavior@(goal.TransitionGoalID)" name="transitionEducationBehavior@(goal.TransitionGoalID)" placeholder="Behavior" title="Behavior" value="@(goal.Behavior)">
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <input class="form-control" type="text" id="transitionEducationCompleted@(goal.TransitionGoalID)" name="transitionEducationCompleted@(goal.TransitionGoalID)" placeholder="Where and How" title="Where and How" value="@(goal.WhereAndHow)">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="newEmploymentGoal" class="btn btn-default new-button-min-width" type="button">New Employment Goal&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionEmploymentGoalContainer">
                                        @if (Model.goals.Count > 0)
                                        {
                                            foreach (var goal in Model.goals.Where(g => g.GoalType == "employment"))
                                            {
                                                <div class="panel-group transitionEmployment" id="transitionEmploymentIndentity@(goal.TransitionGoalID)">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionEmploymentId@(goal.TransitionGoalID)" id="transitionEmploymentId@(goal.TransitionGoalID)" value="@(goal.TransitionGoalID)">
                                                            <input type="hidden" name="transitionGoalTypeEmployment@(goal.TransitionGoalID)" id="transitionGoalTypeEmployment@(goal.TransitionGoalID)" value="employment">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="transitionEmploymentIndentity@(goal.TransitionGoalID)" href="#collapseTransitionEmployment@(goal.TransitionGoalID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionGoalLabel" style="margin-left:8px;">Employment Goal</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteTransitionGoal"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionEmployment@(goal.TransitionGoalID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-4">
                                                                        <select class="form-control" id="transitionEmploymentGraduation@(goal.TransitionGoalID)" name="transitionEmploymentGraduation@(goal.TransitionGoalID)">
                                                                            <option @(goal.CompletetionType == "After Graduation" ? "selected='selected'" : String.Empty )>After Graduation</option>
                                                                            <option @(goal.CompletetionType == "After leaving High School" ? "selected='selected'" : String.Empty )>After leaving High School</option>
                                                                            <option @(goal.CompletetionType == "Upon completion of High School Program" ? "selected='selected'" : String.Empty )>Upon completion of High School Program</option>
                                                                        </select>
                                                                    </div>
                                                                    <div class="col-md-2 vcenter" style="height: 49px;">
                                                                        <span class="transitionGoalStudentClass">Demo&nbsp;Student</span>&nbsp;&nbsp;
                                                                        <span>Will</span>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <input class="form-control" type="text" id="transitionEmploymentBehavior@(goal.TransitionGoalID)" name="transitionEmploymentBehavior@(goal.TransitionGoalID)" placeholder="Behavior" title="Behavior" value="@(goal.Behavior)">
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <input class="form-control" type="text" id="transitionEmploymentCompleted@(goal.TransitionGoalID)" name="transitionEmploymentCompleted@(goal.TransitionGoalID)" placeholder="Where and How" title="Where and How" value="@(goal.WhereAndHow)">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="newIndependentGoal" class="btn btn-default new-button-min-width" type="button">New Independent Living&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionIndependentGoalContainer">
                                        @if (Model.goals.Count > 0)
                                        {
                                            foreach (var goal in Model.goals.Where(g => g.GoalType == "independent"))
                                            {
                                                <div class="panel-group transitionIndependent" id="transitionIndependentIndentity1">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionIndependentId@(goal.TransitionGoalID)" id="transitionIndependentId@(goal.TransitionGoalID)" value="@(goal.TransitionGoalID)">
                                                            <input type="hidden" name="transitionGoalTypeIndependent@(goal.TransitionGoalID)" id="transitionGoalTypeIndependent@(goal.TransitionGoalID)" value="independent">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle collapsed" data-toggle="collapse" data-parent="transitionIndependentIndentity@(goal.TransitionGoalID)" href="#collapseTransitionIndependent@(goal.TransitionGoalID)" aria-expanded="false">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionGoalLabel" style="margin-left:8px;">Independent Living</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteTransitionGoal"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionIndependent@(goal.TransitionGoalID)" class="panel-collapse collapse in" aria-expanded="true">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-4">
                                                                        <select class="form-control" id="transitionIndependentGraduation@(goal.TransitionGoalID)" name="transitionIndependentGraduation@(goal.TransitionGoalID)">
                                                                            <option @(goal.CompletetionType == "After Graduation" ? "selected='selected'" : String.Empty )>After Graduation</option>
                                                                            <option @(goal.CompletetionType == "After leaving High School" ? "selected='selected'" : String.Empty )>After leaving High School</option>
                                                                            <option @(goal.CompletetionType == "Upon completion of High School Program" ? "selected='selected'" : String.Empty )>Upon completion of High School Program</option>
                                                                        </select>
                                                                    </div>
                                                                    <div class="col-md-2 vcenter" style="height: 49px;">
                                                                        <span class="transitionGoalStudentClass">Demo&nbsp;Student</span>&nbsp;&nbsp;
                                                                        <span>Will</span>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <input class="form-control" type="text" id="transitionIndependentBehavior@(goal.TransitionGoalID)" name="transitionIndependentBehavior@(goal.TransitionGoalID)" placeholder="Behavior" title="Behavior" value="@(goal.Behavior)">
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <input class="form-control" type="text" id="transitionIndependentCompleted@(goal.TransitionGoalID)" name="transitionIndependentCompleted@(goal.TransitionGoalID)" placeholder="Where and How" title="Where and How" value="@(goal.WhereAndHow)">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="activate-step-3" class="btn btn-primary btn-lg" style="margin-top: 20px;" type="button">Add Transition Services</button>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
                <div class="row setup-content" id="step-3">
                    <div class="col-xs-12">
                        <div class="col-md-12 well" style="background-color: transparent;">

                            <!-- Default Service Template -->
                            <div class="panel-group transitionService hidden" id="transitionServiceDefault">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <input type="hidden" name="transitionServiceId" id="transitionServiceId" value="0" />
                                        <input type="hidden" name="transitionServiceType" id="transitionServiceType" value="" />
                                        <h4 class="panel-title">
                                            <a class="btnToggle" data-toggle="collapse" data-parent="transitionServiceDefault" href="#collapse">
                                                <span class="glyphicon glyphicon-random"></span><span class="transitionServiceLabel" style="margin-left:8px;">Service</span>
                                                <span class="pull-right">
                                                    <i class="glyphicon glyphicon-trash deleteService"></i>
                                                </span>
                                            </a>
                                        </h4>
                                    </div>
                                    <div id="collapse" class="panel-collapse collapse in">
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label for="transitionServiceDescription">Description</label>
                                                    <div>
                                                        <textarea id="transitionServiceDescription" rows="3" name="transitionServiceDescription" placeholder="When and where will the activity occur and whil will support it?" class="activity-textarea"></textarea>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <label for="transitionServiceFrequency">Frequency</label>
                                                    <div>
                                                        <input class="form-control" id="transitionServiceFrequency" maxlength="2000" name="transitionServiceFrequency" type="text" placeholder="once a week" value="">
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <label for="transitionServiceDuration">Duration</label>
                                                    <div>
                                                        <input class="form-control" id="transitionServiceDuration" maxlength="2000" name="transitionServiceDuration" type="text" placeholder="30 minutes at a time" value="">
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <label for="transitionServiceLocation">Location</label>
                                                    <div>
                                                        <input class="form-control" id="transitionServiceLocation" maxlength="2000" name="transitionServiceLocation" type="text" placeholder="where will the activity occur?" value="">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @using (Html.BeginForm("EditTransitionServices", "ModuleSection", null, FormMethod.Post, new { id = "transitionServiceForm" }))
                            {
                                @Html.Hidden("studentId", Model.studentId)
                                @Html.Hidden("IEPid", Model.iepId)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="row">
                                    <div class="col-md-12">
                                        <h5><b>Post Secondary Transition Services reviewed annually.</b></h5>
                                        <br/>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="newInstructions" class="btn btn-default new-button-min-width" type="button">New Instruction Service&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12 addiontionalServiceInfo">
                                        Instruction is the use of formal techniques to impact knowledge.  It is typically in schools through academic instruction, general education classes, tutoring, etc. Other instructional activities that could be provided by other entities or in other locations are: adult basic education, technical preparation programming, community colleges, universities, and vocational training centers.
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionInstructionServiceContainer">

                                        @if (Model.services.Count > 0)
                                        {
                                            foreach (var service in Model.services.Where(s => s.ServiceType == "instruction"))
                                            {
                                                <div class="panel-group transitionInstructionService" id="transitionInstructionServiceIndentity@(service.TransitionServiceID)">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionInstructionServiceId@(service.TransitionServiceID)" id="transitionInstructionServiceId@(service.TransitionServiceID)" value="@(service.TransitionServiceID)">
                                                            <input type="hidden" name="transitionInstructionerviceType@(service.TransitionServiceID)" id="transitionInstructionServiceType@(service.TransitionServiceID)" value="instruction">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="transitionInstructionIndentity@(service.TransitionServiceID)" href="#collapseTransitionInstruction@(service.TransitionServiceID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionServiceLabel" style="margin-left:8px;">Instruction Service</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteService"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionInstruction@(service.TransitionServiceID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDescription">Description</label>
                                                                        <div>
                                                                            <textarea id="transitionInstructionServiceDescription@(service.TransitionServiceID)" rows="3" name="transitionInstructionServiceDescription@(service.TransitionServiceID)" placeholder="When and where will the activity occur and whil will support it?" class="activity-textarea">@(service.ServiceDescription)</textarea>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceFrequency">Frequency</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionInstructionServiceFrequency@(service.TransitionServiceID)" maxlength="2000" name="transitionInstructionServiceFrequency@(service.TransitionServiceID)1" type="text" placeholder="once a week" value="@(service.Frequency)" />
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDuration">Duration</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionInstructionServiceDuration1" maxlength="2000" name="transitionInstructionServiceDuration@(service.TransitionServiceID)" type="text" placeholder="30 minuets at a time" value="@(service.Duration)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceLocation">Location</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionInstructionServiceLocation1" maxlength="2000" name="transitionInstructionServiceLocation@(service.TransitionServiceID)" type="text" placeholder="where will the activity occur?" value="@(service.Location)">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="newRelated" class="btn btn-default new-button-min-width" type="button">New Related Service&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12 addiontionalServiceInfo">
                                        Considerations should include assistive technology, orientation and mobility training, speech and language pathology, audiology, psychological services, physical and occupational therapy, recreation, counseling services, including rehabilitation counseling, and medical services for diagnostic or evaluation purposes.
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionRelatedServiceContainer">

                                        @if (Model.services.Count > 0)
                                        {
                                            foreach (var related in Model.services.Where(s => s.ServiceType == "related"))
                                            {
                                                <div class="panel-group transitionRelatedService" id="transitionRelatedIndentity@(related.TransitionServiceID)">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionRelatedServiceId@(related.TransitionServiceID)" id="transitionRelatedServiceId@(related.TransitionServiceID)" value="@(related.TransitionServiceID)">
                                                            <input type="hidden" name="transitionRelatedServiceType@(related.TransitionServiceID)" id="transitionRelatedServiceType@(related.TransitionServiceID)" value="related">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="transitionRelatedIndentity1" href="#collapseTransitionRelated@(related.TransitionServiceID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionServiceLabel" style="margin-left:8px;">Related Service</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteService"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionRelated@(related.TransitionServiceID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDescription">Description</label>
                                                                        <div>
                                                                            <textarea id="transitionRelatedServiceDescription@(related.TransitionServiceID)" rows="3" name="transitionRelatedServiceDescription@(related.TransitionServiceID)" placeholder="When and where will the activity occur and whil will support it?" class="activity-textarea">@(related.ServiceDescription)</textarea>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceFrequency">Frequency</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionRelatedServiceFrequency@(related.TransitionServiceID)" maxlength="2000" name="transitionRelatedServiceFrequency@(related.TransitionServiceID)" type="text" placeholder="once a week" value="@(related.Frequency)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDuration">Duration</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionRelatedServiceDuration@(related.TransitionServiceID)" maxlength="2000" name="transitionRelatedServiceDuration@(related.TransitionServiceID)" type="text" placeholder="30 minuets at a time" value="@(related.Duration)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceLocation">Location</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionRelatedServiceLocation@(related.TransitionServiceID)" maxlength="2000" name="transitionRelatedServiceLocation@(related.TransitionServiceID)" type="text" placeholder="where will the activity occur?" value="@(related.Location)">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="newSkill" class="btn btn-default new-button-min-width" type="button">New Daily Living Skill Service&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12 addiontionalServiceInfo">
                                        Daily living skills are those activities that adults do every day (e.g. preparing meals, budgeting, maintaining a home, paying bills, caring for clothes, grooming, etc.)
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionDailyServiceContainer">

                                        @if (Model.services.Count > 0)
                                        {
                                            foreach (var daily in Model.services.Where(s => s.ServiceType == "daily"))
                                            {
                                                <div class="panel-group transitionDailyService" id="transitionDailyIndentity1">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionDailyServiceId@(daily.TransitionServiceID)" id="transitionDailyServiceId@(daily.TransitionServiceID)" value="@(daily.TransitionServiceID)">
                                                            <input type="hidden" name="transitionDailyServiceType@(daily.TransitionServiceID)" id="transitionDailyServiceType@(daily.TransitionServiceID)" value="daily">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="transitionDailyIndentity@(daily.TransitionServiceID)" href="#collapseTransitionDaily@(daily.TransitionServiceID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionServiceLabel" style="margin-left:8px;">Daily Living Skills Service</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteService"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionDaily@(daily.TransitionServiceID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDescription">Description</label>
                                                                        <div>
                                                                            <textarea id="transitionDailyServiceDescription@(daily.TransitionServiceID)" rows="3" name="transitionDailyServiceDescription@(daily.TransitionServiceID)" placeholder="When and where will the activity occur and whil will support it?" class="activity-textarea">@(daily.ServiceDescription)</textarea>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceFrequency">Frequency</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionDailyServiceFrequency@(daily.TransitionServiceID)" maxlength="2000" name="transitionDailyServiceFrequency@(daily.TransitionServiceID)" type="text" placeholder="once a week" value="@(daily.Frequency)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDuration">Duration</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionDailyServiceDuration@(daily.TransitionServiceID)" maxlength="2000" name="transitionDailyServiceDuration@(daily.TransitionServiceID)" type="text" placeholder="30 minuets at a time" value="@(daily.Duration)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceLocation">Location</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionDailyServiceLocation@(daily.TransitionServiceID)" maxlength="2000" name="transitionDailyServiceLocation@(daily.TransitionServiceID)" type="text" placeholder="where will the activity occur?" value="@(daily.Location)">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" style="margin-bottom: 12px;">
                                        <button id="newVocational" class="btn btn-default new-button-min-width" type="button">New Functional Vocational Service&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionFunctionalServiceContainer">

                                        @if (Model.services.Count > 0)
                                        {
                                            foreach (var vocational in Model.services.Where(s => s.ServiceType == "vocational"))
                                            {
                                                <div class="panel-group transitionVocationalService" id="transitionVocationalIndentity@(vocational.TransitionServiceID)">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionVocationalServiceId@(vocational.TransitionServiceID)" id="transitionVocationalServiceId@(vocational.TransitionServiceID)" value="@(vocational.TransitionServiceID)">
                                                            <input type="hidden" name="transitionVocationalServiceType@(vocational.TransitionServiceID)" id="transitionVocationalServiceType@(vocational.TransitionServiceID)" value="vocational">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="transitionVocationalIndentity@(vocational.TransitionServiceID)" href="#collapseTransitionVoctional@(vocational.TransitionServiceID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionServiceLabel" style="margin-left:8px;">Functional Vocational Service</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteService"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionVoctional@(vocational.TransitionServiceID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDescription">Description</label>
                                                                        <div>
                                                                            <textarea id="transitionVocationalServiceDescription@(vocational.TransitionServiceID)" rows="3" name="transitionVocationalServiceDescription@(vocational.TransitionServiceID)" placeholder="When and where will the activity occur and whil will support it?" class="activity-textarea">@(vocational.ServiceDescription)</textarea>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceFrequency">Frequency</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionVocationalServiceFrequency@(vocational.TransitionServiceID)" maxlength="300" name="transitionVocationalServiceFrequency@(vocational.TransitionServiceID)" type="text" placeholder="once a week" value="@(vocational.Frequency)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDuration">Duration</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionVocationalServiceDuration@(vocational.TransitionServiceID)" maxlength="300" name="transitionVocationalServiceDuration@(vocational.TransitionServiceID)" type="text" placeholder="30 minuets at a time" value="@(vocational.Duration)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceLocation">Location</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionVocationalServiceLocation@(vocational.TransitionServiceID)" maxlength="300" name="transitionVocationalServiceLocation@(vocational.TransitionServiceID)" type="text" placeholder="where will the activity occur?" value="@(vocational.Location)">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" style="margin-bottom: 12px;">
                                        <button id="newLeisure" class="btn btn-default new-button-min-width" type="button">New Recreation and Leisure&nbsp;&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12" id="transitionLeisureServiceContainer">

                                        @if (Model.services.Count > 0)
                                        {
                                            foreach (var vocational in Model.services.Where(s => s.ServiceType == "leisure"))
                                            {
                                                <div class="panel-group transitionLeisureService" id="transitionLeisureIndentity@(vocational.TransitionServiceID)">
                                                    <div class="panel panel-default">
                                                        <div class="panel-heading">
                                                            <input type="hidden" name="transitionLeisureServiceId@(vocational.TransitionServiceID)" id="transitionLeisureServiceId@(vocational.TransitionServiceID)" value="@(vocational.TransitionServiceID)">
                                                            <input type="hidden" name="transitionLeisureServiceType@(vocational.TransitionServiceID)" id="transitionLeisureServiceType@(vocational.TransitionServiceID)" value="leisure">
                                                            <h4 class="panel-title">
                                                                <a class="btnToggle" data-toggle="collapse" data-parent="transitionLeisureIndentity@(vocational.TransitionServiceID)" href="#collapseTransitionLeisure@(vocational.TransitionServiceID)">
                                                                    <span class="glyphicon glyphicon-random"></span><span class="transitionServiceLabel" style="margin-left:8px;">Recreation and Leisure Service</span>
                                                                    <span class="pull-right">
                                                                        <i class="glyphicon glyphicon-trash deleteService"></i>
                                                                    </span>
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="collapseTransitionLeisure@(vocational.TransitionServiceID)" class="panel-collapse collapse in">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDescription">Description</label>
                                                                        <div>
                                                                            <textarea id="transitionLeisureServiceDescription@(vocational.TransitionServiceID)" rows="3" name="transitionLeisureServiceDescription@(vocational.TransitionServiceID)" placeholder="When and where will the activity occur and whil will support it?" class="activity-textarea">@(vocational.ServiceDescription)</textarea>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceFrequency">Frequency</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionLeisureServiceFrequency@(vocational.TransitionServiceID)" maxlength="2000" name="transitionLeisureServiceFrequency@(vocational.TransitionServiceID)" type="text" placeholder="once a week" value="@(vocational.Frequency)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceDuration">Duration</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionLeisureServiceDuration@(vocational.TransitionServiceID)" maxlength="2000" name="transitionLeisureServiceDuration@(vocational.TransitionServiceID)" type="text" placeholder="30 minuets at a time" value="@(vocational.Duration)">
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <label for="transitionServiceLocation">Location</label>
                                                                        <div>
                                                                            <input class="form-control" id="transitionLeisureServiceLocation@(vocational.TransitionServiceID)" maxlength="2000" name="transitionLeisureServiceLocation@(vocational.TransitionServiceID)" type="text" placeholder="where will the activity occur?" value="@(vocational.Location)">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <h4><b>Community Participation</b></h4>
                                        <fieldset class="form-group">
                                            <label style="padding: 5px 0 10px; font-weight: normal;">Community experiences are those activities provided outside the school building, in community settings, by families, schools, school-to-work internships and apprenticeships, and other agencies that may provide these experiences including JPTA, independent living centers, vocational rehabilitation, community developmental disabilities organizations, and mental health centers.  These experiences may include activities such as school sponsored field trips, participation in community organizations and clubs (e.g. Girl Scouts or 4-H activities), community work experiences, and counseling services.</label>&nbsp;&nbsp;
                                            <div class="onoffswitch2" style="display: inline-block; vertical-align: middle;">
                                                <input type="checkbox" name="isCommunityParticipation" id="isCommunityParticipation" class="onoffswitch2-checkbox"  @(Model.transition.CommunityParticipation ? "checked='checked'" : "" )>
                                                <label class="onoffswitch2-label" for="isCommunityParticipation">
                                                    <span class="onoffswitch2-inner"></span>
                                                    <span class="onoffswitch2-switch"></span>
                                                </label>
                                            </div>
                                            <textarea class="form-control @(Model.transition.CommunityParticipation ?  String.Empty : "hidden")" style="width: 100%; margin: 25px 0 0 0;" name="communityParticipationDesc" id="communityParticipationDesc">@(Model.transition.CommunityParticipation_Description)</textarea>
                                        </fieldset>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="activate-step-4" class="btn btn-primary btn-lg" style="margin-top: 20px;" type="button">Add Course of Study</button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="row setup-content" id="step-4">
                    <div class="col-xs-12">
                        <div class="col-md-12 well" style="background-color: transparent;">

                            @using (Html.BeginForm("EditTransitionStudy", "ModuleSection", null, FormMethod.Post, new { id = "transitionStudyForm" }))
                            {
                                @Html.Hidden("studentId", Model.studentId)
                                @Html.Hidden("IEPid", Model.iepId)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                <div class="row">
                                    <div class="col-md-12">
                                        <h3 class="courseOfStudyHeader">Statement of Courses of Study</h3>
                                        <p>
                                            @(@Model.student.FirstName)&nbsp;@(Model.student.LastName) will work his primary implementer and counselor annually to enroll in he courses he needs for his course of study for coming school year.
                                            He/She and the IEP team have reviewd this course of study and transcript at this IEP meeting. These courses will meet the requirements of the school
                                            district and will be meaningful to his post secondary goal of working as an <a href="#" id="inline-occupation" data-type="text" data-title="Enter occupation" class="editable editable-click" style="display: inline;">Enter occupation</a>. The courses he/she is enrolled in for school year
                                            and those which he has taken have allow him/her to explore areas of high interest and determine the type of skils he/she will need for different career fields.
                                        </p>
                                        <fieldset class="form-group">
                                            <label style="padding: 5px 0 10px;">Do the transition courses of study focus on improving the academic and functional achievement of the child to faciliate their movement from school to post-school?</label>&nbsp;&nbsp;
                                            <div class="onoffswitch2" style="display: inline-block; vertical-align: middle;">
                                                <input type="checkbox" name="isFocusFunctionalAchievement" id="isFocusFunctionalAchievement" class="onoffswitch2-checkbox" @(Model.transition.Planning_Facilitate ? "checked='checked'" : "" )>
                                                <label class="onoffswitch2-label" for="isFocusFunctionalAchievement">
                                                    <span class="onoffswitch2-inner"></span>
                                                    <span class="onoffswitch2-switch"></span>
                                                </label>
                                            </div>
                                        </fieldset>
                                        <fieldset class="form-group">
                                            <label style="padding: 5px 0 10px;">Do the courses of study (and other education experiences) align with the student's post goals?</label>&nbsp;&nbsp;
                                            <div class="onoffswitch2" style="display: inline-block; vertical-align: middle;">
                                                <input type="checkbox" name="isAlignStudentPostGoals" id="isAlignStudentPostGoals" class="onoffswitch2-checkbox" @(Model.transition.Planning_Align ? "checked='checked'" : "" )>
                                                <label class="onoffswitch2-label" for="isAlignStudentPostGoals">
                                                    <span class="onoffswitch2-inner"></span>
                                                    <span class="onoffswitch2-switch"></span>
                                                </label>
                                            </div>
                                        </fieldset>
                                        <p>
                                            The IEP team has review this student's progress towards graduation. For high school students, a copy of the plan has been developed/updated and is
                                            maintained in the counselor's office
                                        </p>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-3">
                                        <fieldset class="form-group">
                                            <label for="Duration">Anticipated Graduation Month/Year</label>
                                            <div class="input-group">
                                                <input type="month" name="graduationYear" class="form-control text-center" value="@(Model.transition.Planning_GraduationYear)-0@(Model.transition.Planning_GraduationMonth)" style="width: 24rem;">
                                            </div>
                                        </fieldset>
                                    </div>
                                    <div class="col-md-6">
                                        <fieldset class="form-group">
                                            <label>&nbsp;</label>
                                            <select class="form-control" name="planningCompletion" id="planningCompletion">
                                                <option @(Model.transition.Planning_Completion == "Graduate with a High School Diploma" ? "selected='selected'" : "")>Graduate with a High School Diploma</option>
                                                <option @(Model.transition.Planning_Completion == "Complete their Educational Program or Exit at the end of the school year during which the student becomes 21 years of age" ? "selected='selected'" : "")>Complete their Educational Program or Exit at the end of the school year during which the student becomes 21 years of age</option>
                                            </select>
                                        </fieldset>
                                    </div>
                                    <div class="col-md-3">
                                        <fieldset class="form-group">
                                            <label for="totalcredits">Total # of Credits required by district</label>
                                            <input type="text" name="totalcredits" id="totalcredits" class="form-control" value="@(Model.transition.Planning_Credits)" />
                                        </fieldset>
                                    </div>
                                </div>

                                <div class="row" style="margin-top:15px;">
                                    <div class="col-md-12">
                                        <h4><b>Vocational Rehabilitation</b></h4>
                                        <fieldset class="form-group">
                                            <label style="padding: 5px 0 10px;">Did the IEP Team determine that the student, if age 16 or older, might benefit from Kansas Rehabilitation Service (KRS) assistance?</label>&nbsp;&nbsp;
                                            <div class="onoffswitch2" style="display: inline-block; vertical-align: middle;">
                                                <input type="checkbox" name="isVocationalRehabiltiation" id="isVocationalRehabiltiation" class="onoffswitch2-checkbox" @(Model.transition.Planning_BenefitKRS ? "checked='checked'" : "" )>
                                                <label class="onoffswitch2-label" for="isVocationalRehabiltiation">
                                                    <span class="onoffswitch2-inner"></span>
                                                    <span class="onoffswitch2-switch"></span>
                                                </label>
                                            </div>
                                        </fieldset>
                                        <fieldset class="form-group @(Model.transition.Planning_BenefitKRS ? "" : "hidden" )  " id="releaseObtained">
                                            <label style="padding: 5px 0 10px;">Was consent to release confidential information obtained to prior to KRS notification?</label>&nbsp;&nbsp;
                                            <div class="onoffswitch2" style="display: inline-block; vertical-align: middle;">
                                                <input type="checkbox" name="isConfidentailReleaseObtained" id="isConfidentailReleaseObtained" class="onoffswitch2-checkbox" @(Model.transition.Planning_ConsentPrior ? "checked='checked'" : "" )>
                                                <label class="onoffswitch2-label" for="isConfidentailReleaseObtained">
                                                    <span class="onoffswitch2-inner"></span>
                                                    <span class="onoffswitch2-switch"></span>
                                                </label>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <button id="saveFinish" class="btn btn-primary btn-lg" style="margin-top: 20px;" type="button">Finish Transition</button>
                                    </div>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default btn-lg" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>
<script src="~/Scripts/editable.js"></script>
<script>
    $(document).ready(function () {

        var navListItems = $('ul.setup-panel li a'),
            allWells = $('.setup-content');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                $item = $(this).closest('li');

            if (!$item.hasClass('disabled')) {
                navListItems.closest('li').removeClass('active');
                $item.addClass('active');
                allWells.hide();
                $target.show();
            }
        });

        // update the date displayed in the deafaul transition label to todays date.
        $(this).find("#assessmentDefault").find(".transitionTitleDate").html(new Date().toISOString().substr(0, 10));

        $('ul.setup-panel li.active a').trigger('click');

        $('#activate-step-2').on('click', function (e) {

            var formData = $('#transitionAssessmentForm');

            $.ajax({
                type: 'POST',
                url: '/ModuleSection/EditTransitionAssessements',
                dataType: "json",
                data: formData.serialize(),
                success: function (data) {
                    if (data.Result == "success") {
                        console.log("Assessments successfull updated.");
                    }
                    else {
                        if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                            $("#alertMessage .moreinfo").html(data.Message);
                            $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                $("#alertMessage").slideUp(500);
                            });
                        }
                    }
                },
                error: function (data) {
                    console.log("Unable to delete the student goal.");
                }
            });

            $('ul.setup-panel li:eq(1)').removeClass('disabled');
            $('ul.setup-panel li a[href="#step-2"]').trigger('click');
        });

        $('#activate-step-3').on('click', function (e) {

            var formData = $('#transitionGoalForm');

            $.ajax({
                type: 'POST',
                url: '/ModuleSection/EditTransitionGoals',
                dataType: "json",
                data: formData.serialize(),
                success: function (data) {
                    if (data.Result == "success") {
                        console.log("Goals successfull updated.");
                    }
                    else {
                        if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                            $("#alertMessage .moreinfo").html(data.Message);
                            $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                $("#alertMessage").slideUp(500);
                            });
                        }
                    }
                },
                error: function (data) {
                    console.log("Unable to delete the student goal.");
                }
            });

            $('ul.setup-panel li:eq(2)').removeClass('disabled');
            $('ul.setup-panel li a[href="#step-3"]').trigger('click');
        });

        $('#activate-step-4').on('click', function (e) {

            var formData = $('#transitionServiceForm');

            $.ajax({
                type: 'POST',
                url: '/ModuleSection/EditTransitionServices',
                dataType: "json",
                data: formData.serialize(),
                success: function (data) {
                    if (data.Result == "success") {
                        console.log("Services successfull updated.");
                    }
                    else {
                        if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                            $("#alertMessage .moreinfo").html(data.Message);
                            $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                $("#alertMessage").slideUp(500);
                            });
                        }
                    }
                },
                error: function (data) {
                    console.log("Unable to delete the student goal.");
                }
            });

            $('ul.setup-panel li:eq(3)').removeClass('disabled');
            $('ul.setup-panel li a[href="#step-4"]').trigger('click');
        });

        $('#saveFinish').on('click', function (e) {

            // make sure occupation is filled out before saving.
            if ($("#inline-occupation").text() == "Enter occupation") {
                alert("Please enter an occupation before saving.");
                e.stopPropagation();
                $('#inline-occupation').editable('toggle');

                return;
            }

            var formData = $('#transitionStudyForm');

            $.ajax({
                type: 'POST',
                url: '/ModuleSection/EditTransitionStudy',
                dataType: "json",
                data: formData.serialize(),
                success: function (data) {
                    if (data.Result == "success") {
                        console.log("Course of Study successfull updated.");
                        $('#moduleSection').modal('hide');
                    }
                    else {
                        if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                            $("#alertMessage .moreinfo").html(data.Message);
                            $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                $("#alertMessage").slideUp(500);
                            });
                        }
                    }
                },
                error: function (data) {
                    console.log("There was an error saving the Course of Study");
                }
            });
        });

        $(".transitionAssessment").not(':last-child').find(".panel-collapse.in").collapse("hide");

        $(".transitionEducation").not(':last-child').find(".panel-collapse.in").collapse("hide");
        $(".transitionEmployment").not(':last-child').find(".panel-collapse.in").collapse("hide");
        $(".transitionIndependent").not(':last-child').find(".panel-collapse.in").collapse("hide");

        $(".transitionInstructionService").not(':last-child').find(".panel-collapse.in").collapse("hide");
        $(".transitionRelatedService").not(':last-child').find(".panel-collapse.in").collapse("hide");
        $(".transitionDailyService").not(':last-child').find(".panel-collapse.in").collapse("hide");
        $(".transitionVocationalService").not(':last-child').find(".panel-collapse.in").collapse("hide");
        $(".transitionLeisureService").not(':last-child').find(".panel-collapse.in").collapse("hide");

        initAssessments();
        initEducation();
        initEmployment();
        initIndependent();
        initInstruction();
        initRelated();
        initSkill();
        initVocational();
        initLeisure();

        $("input[name='isVocationalRehabiltiation']").change(function () {
            if (!this.checked) {
                $("input[name='isConfidentailReleaseObtained']").prop('checked', false);
            }
        });

        var is_safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
        var is_explorer = typeof document !== 'undefined' && !!document.documentMode && !isEdge;
        if (is_safari || is_explorer) {
            $("#graduationYear").datepicker();
        }
    });

    $('ul.setup-panel li.active a').trigger('click');

    //inline editable
    $('#inline-occupation').editable({
        type: 'text',
        pk: 1,
        name: 'occupation',
        title: 'Enter occupation',
        mode: 'inline'
    });

    // Attach Event
    // fires when the user toggles the 21st birthday question.
    $("input[name='isStudentBirthdayAgeOver21']").on('click', function (event) {
        var isBirthdayAgeOver21 = $("input[name='isStudentBirthdayAgeOver21']");

        $("input[name='isStudentBirthdayAgeOver21']").is(':checked', !isBirthdayAgeOver21.prop("checked"));
        $("#studentBirthdayAgeOver21").toggleClass("hidden");
    });

    // Attach Event
    // fires when the user toggles Vocational Rehabilitation question.
    $("input[name='isVocationalRehabiltiation']").on('click', function (event) {
        var isVocationalRehabiltiation = $("input[name='isVocationalRehabiltiation']");

        $("input[name='isVocationalRehabiltiation']").is(':checked', !isVocationalRehabiltiation.prop("checked"));
        $("#releaseObtained").toggleClass("hidden");
    });

    // Attach Event
    // fires when the user slides the community participation 
    $("#isCommunityParticipation").on("click", function (e) {

        if($("#isCommunityParticipation").is(":checked")){
            $("#communityParticipationDesc").removeClass("hidden");
        }
        else {
            $("#communityParticipationDesc").addClass("hidden");
            $("#communityParticipationDesc").val('');
        }
    });

    // assessment

    $("#newTransitionAssessment").on("click", function () {

        var cloneAssessment = $("#assessmentDefault").clone();
        cloneAssessment.removeClass("hidden");
        cloneAssessment.removeAttr("id");
        cloneAssessment.find(".transitionTitleDate").html(new Date(Date.now()).toLocaleString().split(',')[0]);

        var assessmentCount = $(".transitionAssessment").not("#assessmentDefault").length + 1;
        cloneAssessment.prop("id", "assessmentIndentity" + assessmentCount);
        cloneAssessment.find(".transitionAssessment").prop("id", "assessment" + assessmentCount);
        cloneAssessment.find('[data-parent="assessmentDefault"]').attr("data-parent", "assessmentIndentity" + assessmentCount).prop("href", "#collapseAssessment" + assessmentCount);
        cloneAssessment.find(".panel-body").parent().prop("id", "collapseAssessment" + assessmentCount);
        cloneAssessment.find("#transitionAssessmentIdDefault").prop("id", "transitionAssessmentId" + assessmentCount).attr("name", "transitionAssessmentId" + assessmentCount);
        cloneAssessment.find("#transitionAssessmentNarrativeDefault").prop("id", "transitionAssessmentNarrative" + assessmentCount).attr("name", "transitionAssessmentNarrative" + assessmentCount);
        cloneAssessment.find("#transitionAssessmentCompletedDefault").prop("id", "transitionAssessmentCompleted" + assessmentCount).attr("name", "transitionAssessmentCompleted" + assessmentCount);
        cloneAssessment.find("#transitionAssessmentPerformanceDefault").prop("id", "transitionAssessmentPerformance" + assessmentCount).attr("name", "transitionAssessmentPerformance" + assessmentCount);

        // close all but the last assessment.
        $(".transitionAssessment").not("#assessmentDefault").find(".panel-collapse.in").collapse("hide");

        $("#transitionAssessmentContainer").append(cloneAssessment);

        initAssessments();
    });

    function initAssessments() {

        $('.transitionAssessment').not('#assessmentDefault').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition assessment trash
            $(this).find(".deleteTransitionAssessment").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionAssessment");
                var answer = confirm('Are you sure you want to delete this transition assessment?');
                if (answer) {
                    var asmId = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (asmId == 0) {
                        $(this).closest(".transitionAssessment").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionAssessments',
                            data: { assessmentId: asmId },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }
            });
        });

    }

    // goals

    $("#newEducationGoal").on("click", function () {

        var cloneEducation = $("#transitionGoalDefault").clone();
        cloneEducation.removeClass("hidden transitionGoal");
        cloneEducation.addClass("transitionEducation");
        cloneEducation.removeAttr("id");

        var educationCount = $(".transitionEducation").length + 1;
        cloneEducation.prop("id", "transitionEducationIndentity" + educationCount);
        cloneEducation.find("#transitionGoalId").prop("id", "transitionEducationId" + educationCount).prop("name", "transitionEducationId" + educationCount);
        cloneEducation.find("#transitionGoalType").prop("id", "transitionGoalTypeEducation" + educationCount).prop("name", "transitionGoalTypeEducation" + educationCount).val("education");
        cloneEducation.find(".transitionGoalLabel").text("Education/Training Goal");
        cloneEducation.find('[data-parent="transitionServiceDefault"]').attr("data-parent", "transitionEducationIndentity" + educationCount).prop("href", "#collapseTransitionEducation" + educationCount);
        cloneEducation.find(".panel-body").parent().prop("id", "collapseTransitionEducation" + educationCount);
        cloneEducation.find("#transitionGoalGraduation").prop("id", "transitionEducationGraduation" + educationCount).attr("name", "transitionEducationGraduation" + educationCount);
        cloneEducation.find("#transitionGoalBehavior").prop("id", "transitionEducationBehavior" + educationCount).attr("name", "transitionEducationBehavior" + educationCount);
        cloneEducation.find("#transitionGoalHow").prop("id", "transitionEducationCompleted" + educationCount).attr("name", "transitionEducationCompleted" + educationCount);

        // close all but the last assessment.
        $(".transitionEducation").find(".panel-collapse.in").collapse("hide");

        $("#transitionEducationGoalContainer").append(cloneEducation);

        initEducation();
    });

    function initEducation() {

        $('.transitionEducation').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition assessment trash
            $(this).find(".deleteTransitionGoal").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionEducation");
                var answer = confirm('Are you sure you want to delete this education goal?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionEducation").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionGoal',
                            data: { goalId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }
            });

        });

    }

    $("#newEmploymentGoal").on("click", function () {

        var cloneEmployment = $("#transitionGoalDefault").clone();
        cloneEmployment.removeClass("hidden transitionGoal");
        cloneEmployment.addClass("transitionEmployment");
        cloneEmployment.removeAttr("id");

        var employmentCount = $(".transitionEmployment").length + 1;
        cloneEmployment.prop("id", "transitionEmploymentIndentity" + employmentCount);
        cloneEmployment.find("#transitionGoalId").prop("id", "transitionEmploymentId" + employmentCount).prop("name", "transitionEmploymentId" + employmentCount);
        cloneEmployment.find("#transitionGoalType").prop("id", "transitionGoalTypeEmployment" + employmentCount).prop("name", "transitionGoalTypeEmployment" + employmentCount).val("employment");
        cloneEmployment.find(".transitionGoalLabel").text("Employment Goal");
        cloneEmployment.find('[data-parent="transitionGoalDefault"]').attr("data-parent", "transitionEmploymentIndentity" + employmentCount).prop("href", "#collapseTransitionEmployment" + employmentCount);
        cloneEmployment.find(".panel-body").parent().prop("id", "collapseTransitionEmployment" + employmentCount);
        cloneEmployment.find("#transitionGoalGraduation").prop("id", "transitionEmploymentGraduation" + employmentCount).attr("name", "transitionEmploymentGraduation" + employmentCount);
        cloneEmployment.find("#transitionGoalBehavior").prop("id", "transitionEmploymentBehavior" + employmentCount).attr("name", "transitionEmploymentBehavior" + employmentCount);
        cloneEmployment.find("#transitionGoalHow").prop("id", "transitionEmploymentCompleted" + employmentCount).attr("name", "transitionEmploymentCompleted" + employmentCount);

        // close all but the last assessment.
        $(".transitionEmployment").find(".panel-collapse.in").collapse("hide");

        $("#transitionEmploymentGoalContainer").append(cloneEmployment);

        initEmployment();
    });

    function initEmployment() {

        $('.transitionEmployment').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition assessment trash
            $(this).find(".deleteTransitionGoal").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionEmployment");
                var answer = confirm('Are you sure you want to delete this employement goal?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionEmployment").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionGoal',
                            data: { goalId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }

            });
        });

    }

    $("#newIndependentGoal").on("click", function () {

        var cloneIndependent = $("#transitionGoalDefault").clone();
        cloneIndependent.removeClass("hidden transitionGoal");
        cloneIndependent.addClass("transitionIndependent");
        cloneIndependent.removeAttr("id");

        var independentCount = $(".transitionIndependent").length + 1;
        cloneIndependent.prop("id", "transitionIndependentIndentity" + independentCount);
        cloneIndependent.find("#transitionGoalId").prop("id", "transitionIndependentId" + independentCount).prop("name", "transitionIndependentId" + independentCount);
        cloneIndependent.find("#transitionGoalType").prop("id", "transitionGoalTypeIndependent" + independentCount).prop("name", "transitionGoalTypeIndependent" + independentCount).val("independent");
        cloneIndependent.find(".transitionGoalLabel").text("Independent Living");
        cloneIndependent.find('[data-parent="transitionGoalDefault"]').attr("data-parent", "transitionIndependentIndentity" + independentCount).prop("href", "#collapseTransitionIndependent" + independentCount);
        cloneIndependent.find(".panel-body").parent().prop("id", "collapseTransitionIndependent" + independentCount);
        cloneIndependent.find("#transitionGoalGraduation").prop("id", "transitionIndependentGraduation" + independentCount).attr("name", "transitionIndependentGraduation" + independentCount);
        cloneIndependent.find("#transitionGoalBehavior").prop("id", "transitionIndependentBehavior" + independentCount).attr("name", "transitionIndependentBehavior" + independentCount);
        cloneIndependent.find("#transitionGoalHow").prop("id", "transitionIndependentCompleted" + independentCount).attr("name", "transitionIndependentCompleted" + independentCount);

        // close all but the last assessment.
        $(".transitionIndependent").find(".panel-collapse.in").collapse("hide");

        $("#transitionIndependentGoalContainer").append(cloneIndependent);

        initIndependent();
    });

    function initIndependent() {

        $('.transitionIndependent').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition assessment trash
            $(this).find(".deleteTransitionGoal").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionIndependent");
                var answer = confirm('Are you sure you want to delete this independent goal?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionIndependent").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionGoal',
                            data: { goalId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }

            });
        });

    }

    // services

    $("#newInstructions").on("click", function () {

        var cloneInstruction = $("#transitionServiceDefault").clone();
        cloneInstruction.removeClass("hidden transitionService");
        cloneInstruction.addClass("transitionInstructionService");
        cloneInstruction.removeAttr("id");

        var instructionCount = $(".transitionInstructionService").length + 1;
        cloneInstruction.prop("id", "transitionInstructionIndentity" + instructionCount);
        cloneInstruction.find("#transitionServiceId").prop("id", "transitionInstructionServiceId" + instructionCount).prop("name", "transitionInstructionServiceId" + instructionCount);
        cloneInstruction.find("#transitionServiceType").prop("id", "transitionInstructionServiceType" + instructionCount).prop("name", "transitionInstructionServiceType" + instructionCount).val("instruction");
        cloneInstruction.find(".transitionServiceLabel").text("Instruction Service");
        cloneInstruction.find('[data-parent="transitionServiceDefault"]').attr("data-parent", "transitionInstructionIndentity" + instructionCount).prop("href", "#collapseTransitionInstruction" + instructionCount);
        cloneInstruction.find(".panel-body").parent().prop("id", "collapseTransitionInstruction" + instructionCount);
        cloneInstruction.find("#transitionServiceDescription").prop("id", "transitionInstructionServiceDescription" + instructionCount).attr("name", "transitionInstructionServiceDescription" + instructionCount);
        cloneInstruction.find("#transitionServiceFrequency").prop("id", "transitionInstructionServiceFrequency" + instructionCount).attr("name", "transitionInstructionServiceFrequency" + instructionCount);
        cloneInstruction.find("#transitionServiceDuration").prop("id", "transitionInstructionServiceDuration" + instructionCount).attr("name", "transitionInstructionServiceDuration" + instructionCount);
        cloneInstruction.find("#transitionServiceLocation").prop("id", "transitionInstructionServiceLocation" + instructionCount).attr("name", "transitionInstructionServiceLocation" + instructionCount);

        // close all but the last assessment.
        $(".transitionInstructionService").find(".panel-collapse.in").collapse("hide");

        $("#transitionInstructionServiceContainer").append(cloneInstruction);

        initInstruction();
    });

    function initInstruction() {

        $('.transitionInstructionService').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition service trash
            $(this).find(".deleteService").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionInstructionService");
                var answer = confirm('Are you sure you want to delete this instruction service?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionInstructionService").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionService',
                            data: { serviceId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }

            });
        });

    }

    $("#newRelated").on("click", function () {

        var cloneRelated = $("#transitionServiceDefault").clone();
        cloneRelated.removeClass("hidden transitionService");
        cloneRelated.addClass("transitionRelatedService");
        cloneRelated.removeAttr("id");

        var relatedCount = $(".transitionRelatedService").length + 1;
        cloneRelated.prop("id", "transitionRelatedIndentity" + relatedCount);
        cloneRelated.find("#transitionServiceId").prop("id", "transitionRelatedServiceId" + relatedCount).prop("name", "transitionRelatedServiceId" + relatedCount);
        cloneRelated.find("#transitionServiceType").prop("id", "transitionRelatedServiceType" + relatedCount).prop("name", "transitionRelatedServiceType" + relatedCount).val("related");
        cloneRelated.find(".transitionServiceLabel").text("Related Service");
        cloneRelated.find('[data-parent="transitionServiceDefault"]').attr("data-parent", "transitionRelatedIndentity" + relatedCount).prop("href", "#collapseTransitionRelated" + relatedCount);
        cloneRelated.find(".panel-body").parent().prop("id", "collapseTransitionRelated" + relatedCount);
        cloneRelated.find("#transitionServiceDescription").prop("id", "transitionRelatedServiceDescription" + relatedCount).attr("name", "transitionRelatedServiceDescription" + relatedCount);
        cloneRelated.find("#transitionServiceFrequency").prop("id", "transitionRelatedServiceFrequency" + relatedCount).attr("name", "transitionRelatedServiceFrequency" + relatedCount);
        cloneRelated.find("#transitionServiceDuration").prop("id", "transitionRelatedServiceDuration" + relatedCount).attr("name", "transitionRelatedServiceDuration" + relatedCount);
        cloneRelated.find("#transitionServiceLocation").prop("id", "transitionRelatedServiceLocation" + relatedCount).attr("name", "transitionRelatedServiceLocation" + relatedCount);

        // close all but the last assessment.
        $(".transitionRelatedService").find(".panel-collapse.in").collapse("hide");

        $("#transitionRelatedServiceContainer").append(cloneRelated);

        initRelated();
    });

    function initRelated() {

        $('.transitionRelatedService').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition service trash
            $(this).find(".deleteService").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionRelatedService");
                var answer = confirm('Are you sure you want to delete this related service?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionRelatedService").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionService',
                            data: { serviceId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }

            });
        });

    }

    $("#newSkill").on("click", function () {

        var cloneDaily = $("#transitionServiceDefault").clone();
        cloneDaily.removeClass("hidden transitionService");
        cloneDaily.addClass("transitionDailyService");
        cloneDaily.removeAttr("id");

        var dailyCount = $(".transitionDailyService").length + 1;
        cloneDaily.prop("id", "transitionDailyIndentity" + dailyCount);
        cloneDaily.find("#transitionServiceId").prop("id", "transitionDailyServiceId" + dailyCount).prop("name", "transitionDailyServiceId" + dailyCount);
        cloneDaily.find("#transitionServiceType").prop("id", "transitionDailyServiceType" + dailyCount).prop("name", "transitionDailyServiceType" + dailyCount).val("daily");
        cloneDaily.find(".transitionServiceLabel").text("Daily Living Skills Service");
        cloneDaily.find('[data-parent="transitionServiceDefault"]').attr("data-parent", "transitionDailyIndentity" + dailyCount).prop("href", "#collapseTransitionDaily" + dailyCount);
        cloneDaily.find(".panel-body").parent().prop("id", "collapseTransitionDaily" + dailyCount);
        cloneDaily.find("#transitionServiceDescription").prop("id", "transitionDailyServiceDescription" + dailyCount).attr("name", "transitionDailyServiceDescription" + dailyCount);
        cloneDaily.find("#transitionServiceFrequency").prop("id", "transitionDailyServiceFrequency" + dailyCount).attr("name", "transitionDailyServiceFrequency" + dailyCount);
        cloneDaily.find("#transitionServiceDuration").prop("id", "transitionDailyServiceDuration" + dailyCount).attr("name", "transitionDailyServiceDuration" + dailyCount);
        cloneDaily.find("#transitionServiceLocation").prop("id", "transitionDailyServiceLocation" + dailyCount).attr("name", "transitionDailyServiceLocation" + dailyCount);

        // close all but the last assessment.
        $(".transitionDailyService").find(".panel-collapse.in").collapse("hide");

        $("#transitionDailyServiceContainer").append(cloneDaily);

        initSkill();
    });

    function initSkill() {

        $('.transitionDailyService').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition service trash
            $(this).find(".deleteService").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionDailyService");
                var answer = confirm('Are you sure you want to delete this daily living skill service?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionDailyService").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionService',
                            data: { serviceId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }

            });
        });

    }

    $("#newVocational").on("click", function () {

        var cloneDaily = $("#transitionServiceDefault").clone();
        cloneDaily.removeClass("hidden transitionService");
        cloneDaily.addClass("transitionVocationalService");
        cloneDaily.removeAttr("id");

        var vocationalCount = $(".transitionVocationalService").length + 1;
        cloneDaily.prop("id", "transitionVocationalIndentity" + vocationalCount);
        cloneDaily.find("#transitionServiceId").prop("id", "transitionVocationalServiceId" + vocationalCount).prop("name", "transitionVocationalServiceId" + vocationalCount);
        cloneDaily.find("#transitionServiceType").prop("id", "transitionVocationalServiceType" + vocationalCount).prop("name", "transitionVocationalServiceType" + vocationalCount).val("vocational");
        cloneDaily.find(".transitionServiceLabel").text("Functional Vocational Service");
        cloneDaily.find('[data-parent="transitionServiceDefault"]').attr("data-parent", "transitionVocationalIndentity" + vocationalCount).prop("href", "#collapseTransitionVoctional" + vocationalCount);
        cloneDaily.find(".panel-body").parent().prop("id", "collapseTransitionVoctional" + vocationalCount);
        cloneDaily.find("#transitionServiceDescription").prop("id", "transitionVocationalServiceDescription" + vocationalCount).attr("name", "transitionVocationalServiceDescription" + vocationalCount);
        cloneDaily.find("#transitionServiceFrequency").prop("id", "transitionVocationalServiceFrequency" + vocationalCount).attr("name", "transitionVocationalServiceFrequency" + vocationalCount);
        cloneDaily.find("#transitionServiceDuration").prop("id", "transitionVocationalServiceDuration" + vocationalCount).attr("name", "transitionVocationalServiceDuration" + vocationalCount);
        cloneDaily.find("#transitionServiceLocation").prop("id", "transitionVocationalServiceLocation" + vocationalCount).attr("name", "transitionVocationalServiceLocation" + vocationalCount);

        // close all but the last assessment.
        $(".transitionVocationalService").find(".panel-collapse.in").collapse("hide");

        $("#transitionFunctionalServiceContainer").append(cloneDaily);

        initVocational();
    });

    function initVocational() {

        $('.transitionVocationalService').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition service trash
            $(this).find(".deleteService").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionVocationalService");
                var answer = confirm('Are you sure you want to delete this functional vocational service?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionVocationalService").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionService',
                            data: { serviceId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }

            });
        });

    }

    $("#newLeisure").on("click", function () {

        var cloneLeisure = $("#transitionServiceDefault").clone();
        cloneLeisure.removeClass("hidden transitionService");
        cloneLeisure.addClass("transitionLeisureService");
        cloneLeisure.removeAttr("id");

        var leisureCount = $(".transitionLeisureService").length + 1;
        cloneLeisure.prop("id", "transitionLeisureIndentity" + leisureCount);
        cloneLeisure.find("#transitionServiceId").prop("id", "transitionLeisureService" + leisureCount).prop("name", "transitionLeisureServiceId" + leisureCount);
        cloneLeisure.find("#transitionServiceType").prop("id", "transitionLeisureService" + leisureCount).prop("name", "transitionLeisureServiceType" + leisureCount).val("leisure");
        cloneLeisure.find(".transitionServiceLabel").text("Recreation and Leisure Service");
        cloneLeisure.find('[data-parent="transitionServiceDefault"]').attr("data-parent", "transitionLeisureIndentity" + leisureCount).prop("href", "#collapseTransitionLeisure" + leisureCount);
        cloneLeisure.find(".panel-body").parent().prop("id", "collapseTransitionLeisure" + leisureCount);
        cloneLeisure.find("#transitionServiceDescription").prop("id", "transitionLeisureServiceDescription" + leisureCount).attr("name", "transitionLeisureServiceDescription" + leisureCount);
        cloneLeisure.find("#transitionServiceFrequency").prop("id", "transitionLeisureServiceFrequency" + leisureCount).attr("name", "transitionLeisureServiceeFrequency" + leisureCount);
        cloneLeisure.find("#transitionServiceDuration").prop("id", "transitionLeisureServiceDuration" + leisureCount).attr("name", "transitionLeisureServiceDuration" + leisureCount);
        cloneLeisure.find("#transitionServiceLocation").prop("id", "transitionLeisureServiceLocation" + leisureCount).attr("name", "transitionLeisureServiceLocation" + leisureCount);

        // close all but the last assessment.
        $(".transitionLeisureService").find(".panel-collapse.in").collapse("hide");

        $("#transitionLeisureServiceContainer").append(cloneLeisure);

        initLeisure();
    });

    function initLeisure() {

        $('.transitionLeisureService').not('.bound').addClass('bound').each(function (index) {

            // when user delete transition service trash
            $(this).find(".deleteService").on("click", function (e) {
                e.stopPropagation();

                var deleteAssessment = $(this).closest(".transitionLeisureService");
                var answer = confirm('Are you sure you want to delete this recreation and leisure service?');
                if (answer) {
                    var id = $(this).closest(".panel-heading").find("input:hidden:first").val();

                    if (id == 0) {
                        $(this).closest(".transitionLeisureService").remove();
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '/ModuleSection/DeleteTransitionService',
                            data: { serviceId: id },
                            dataType: "json",
                            success: function (data) {
                                if (data.Result == "success") {
                                    deleteAssessment.remove();
                                }
                                else {
                                    if ($("#alertMessage").css('display') && $("#alertMessage").css('display') === 'none') {
                                        $("#alertMessage .moreinfo").html(data.Message);
                                        $("#alertMessage").fadeTo(3000, 500).slideUp(500, function () {
                                            $("#alertMessage").slideUp(500);
                                        });
                                    }
                                }
                            },
                            error: function (data) {
                                console.log("Unable to delete the student goal.");
                            }
                        });
                    }
                }

            });
        });
    }

</script>
